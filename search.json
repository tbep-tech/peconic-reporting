[{"path":[]},{"path":"https://tbep-tech.github.io/peptools/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"CC0 1.0 Universal","title":"CC0 1.0 Universal","text":"CREATIVE COMMONS CORPORATION LAW FIRM PROVIDE LEGAL SERVICES. DISTRIBUTION DOCUMENT CREATE ATTORNEY-CLIENT RELATIONSHIP. CREATIVE COMMONS PROVIDES INFORMATION “-” BASIS. CREATIVE COMMONS MAKES WARRANTIES REGARDING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER, DISCLAIMS LIABILITY DAMAGES RESULTING USE DOCUMENT INFORMATION WORKS PROVIDED HEREUNDER.","code":""},{"path":"https://tbep-tech.github.io/peptools/LICENSE.html","id":"statement-of-purpose","dir":"","previous_headings":"","what":"Statement of Purpose","title":"CC0 1.0 Universal","text":"laws jurisdictions throughout world automatically confer exclusive Copyright Related Rights (defined ) upon creator subsequent owner(s) (, “owner”) original work authorship /database (, “Work”). Certain owners wish permanently relinquish rights Work purpose contributing commons creative, cultural scientific works (“Commons”) public can reliably without fear later claims infringement build upon, modify, incorporate works, reuse redistribute freely possible form whatsoever purposes, including without limitation commercial purposes. owners may contribute Commons promote ideal free culture production creative, cultural scientific works, gain reputation greater distribution Work part use efforts others. /purposes motivations, without expectation additional consideration compensation, person associating CC0 Work (“Affirmer”), extent owner Copyright Related Rights Work, voluntarily elects apply CC0 Work publicly distribute Work terms, knowledge Copyright Related Rights Work meaning intended legal effect CC0 rights. Copyright Related Rights. Work made available CC0 may protected copyright related neighboring rights (“Copyright Related Rights”). Copyright Related Rights include, limited , following: right reproduce, adapt, distribute, perform, display, communicate, translate Work; moral rights retained original author(s) /performer(s); publicity privacy rights pertaining person’s image likeness depicted Work; rights protecting unfair competition regards Work, subject limitations paragraph 4(), ; rights protecting extraction, dissemination, use reuse data Work; database rights (arising Directive 96/9/EC European Parliament Council 11 March 1996 legal protection databases, national implementation thereof, including amended successor version directive); similar, equivalent corresponding rights throughout world based applicable law treaty, national implementations thereof. Waiver. greatest extent permitted , contravention , applicable law, Affirmer hereby overtly, fully, permanently, irrevocably unconditionally waives, abandons, surrenders Affirmer’s Copyright Related Rights associated claims causes action, whether now known unknown (including existing well future claims causes action), Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“Waiver”). Affirmer makes Waiver benefit member public large detriment Affirmer’s heirs successors, fully intending Waiver shall subject revocation, rescission, cancellation, termination, legal equitable action disrupt quiet enjoyment Work public contemplated Affirmer’s express Statement Purpose. Public License Fallback. part Waiver reason judged legally invalid ineffective applicable law, Waiver shall preserved maximum extent permitted taking account Affirmer’s express Statement Purpose. addition, extent Waiver judged Affirmer hereby grants affected person royalty-free, non transferable, non sublicensable, non exclusive, irrevocable unconditional license exercise Affirmer’s Copyright Related Rights Work () territories worldwide, (ii) maximum duration provided applicable law treaty (including future time extensions), (iii) current future medium number copies, (iv) purpose whatsoever, including without limitation commercial, advertising promotional purposes (“License”). License shall deemed effective date CC0 applied Affirmer Work. part License reason judged legally invalid ineffective applicable law, partial invalidity ineffectiveness shall invalidate remainder License, case Affirmer hereby affirms () exercise remaining Copyright Related Rights Work (ii) assert associated claims causes action respect Work, either case contrary Affirmer’s express Statement Purpose. Limitations Disclaimers. trademark patent rights held Affirmer waived, abandoned, surrendered, licensed otherwise affected document. Affirmer offers Work -makes representations warranties kind concerning Work, express, implied, statutory otherwise, including without limitation warranties title, merchantability, fitness particular purpose, non infringement, absence latent defects, accuracy, present absence errors, whether discoverable, greatest extent permissible applicable law. Affirmer disclaims responsibility clearing rights persons may apply Work use thereof, including without limitation person’s Copyright Related Rights Work. , Affirmer disclaims responsibility obtaining necessary consents, permissions rights required use Work. Affirmer understands acknowledges Creative Commons party document duty obligation respect CC0 use Work.","code":""},{"path":"https://tbep-tech.github.io/peptools/articles/Introduction.html","id":"basic-use","dir":"Articles","previous_headings":"","what":"Basic use","title":"Introduction","text":"First load peptools package. Note need install every time use R, need load package. package includes pepstations data object includes metadata station, including lat/lon bay segment. can use sf dplyr package make spatial data object, plot mapview (may need install packages don’t ). Note peptools package built-mapping functions, example just shows create map scratch. pepseg data object also included package shows polygons bay segments. water quality data can imported using read_pepwq() function. compressed folder includes data can downloaded . data downloaded extracted, Excel file raw data named “Peconics SCDHS WQ data - 1976 - 2021.xlsx”, something similar depending data downloaded. location file computer passed import function. , local file renamed “currentdata.xlsx” contains water quality data imported. raw data includes multiple fields, chlorophyll, secchi, total nitrogen data retained reporting. data long format name column showing observation (chlorophyll, secchi, total nitrogen) row value shows status showing observation detection (indicated > <, secchi ). station also grouped major bay segment, defined Western, Central, Eastern. quick view number observations length record station shows effort continuous.  function anlz_pepdat() summarizes station data bay segment. function returns annual medians monthly medians year chlorophyll, secchi depth, total nitrogen. chlorophyll secchi summaries used determine bay segment targets water quality met using anlz_attain() anlz_attainpep() functions. shows use anlz_pepdat() summarize data bay segment estimate annual monthly medians chlorophyll, secchi depth, total nitrogen. output two-element list annual (ann) monthly (mos) medians segment. output can analyzed anlz_attainpep() determine bay segment outcomes met year chlorophyll secchi depth. results used plotting functions described . short, chl_sd column indicates categorical outcome chlorophyll secchi segment. outcomes integer values zero three. relative exceedances water quality thresholds segment, duration magnitude, indicated higher integer values.","code":"library(peptools) library(sf) library(dplyr) library(mapview)  locs <- pepstations %>%    sf::st_as_sf(coords = c('Longitude', 'Latitude'), crs = 4326) %>%    dplyr::mutate(bay_segment = as.character(bay_segment))  mapview(locs, zcol = 'bay_segment', layer.name = 'Bay segment') mapview(pepseg) dat <- read_pepwq('../inst/extdata/currentdata.xlsx') head(dat) #> # A tibble: 6 × 11 #>   Date       BayStation name  value status    yr    mo Station…¹ bay_s…² Longi…³ #>   <date>     <chr>      <chr> <dbl> <chr>  <dbl> <dbl> <chr>     <fct>     <dbl> #> 1 1990-01-31 60113      chla    4.8 \"\"      1990     1 Little P… Central   -72.4 #> 2 1990-01-31 60113      sd      8   \"\"      1990     1 Little P… Central   -72.4 #> 3 1990-01-31 60114      chla    2.8 \"\"      1990     1 Paradise… Central   -72.4 #> 4 1990-01-31 60114      sd     12   \"\"      1990     1 Paradise… Central   -72.4 #> 5 1990-01-31 60115      chla    8.5 \"\"      1990     1 Orient H… Eastern   -72.3 #> 6 1990-01-31 60115      sd      7   \"\"      1990     1 Orient H… Eastern   -72.3 #> # … with 1 more variable: Latitude <dbl>, and abbreviated variable names #> #   ¹​StationName, ²​bay_segment, ³​Longitude library(ggplot2)  toplo <- dat %>%    select(bay_segment, BayStation, yr, name, value) %>%    group_by(bay_segment, BayStation, yr, name) %>%    summarise(`Obs. (n)` = n())  p <- ggplot(toplo, aes(x = yr, y = BayStation, fill = `Obs. (n)`)) +    geom_tile()+ #colour = 'lightgrey') +    facet_grid(bay_segment ~ name, scales = 'free_y', space = 'free_y') +    theme_bw() +    theme(     panel.grid.major = element_blank(),      panel.grid.minor= element_blank(),     strip.background = element_blank(),      axis.title.x = element_blank(),      legend.position = 'top',      axis.text.y = element_text(size = 7)   ) +    scale_fill_viridis_c()  p medpep <- anlz_medpep(dat) medpep #> $ann #> # A tibble: 864 × 5 #>    bay_segment    yr   val est    var   #>    <fct>       <dbl> <dbl> <chr>  <chr> #>  1 Western      2021  7.07 lwr.ci chla  #>  2 Western      2021  9.35 medv   chla  #>  3 Western      2021 11.3  upr.ci chla  #>  4 Western      2020  3.72 lwr.ci chla  #>  5 Western      2020  4.64 medv   chla  #>  6 Western      2020  5.76 upr.ci chla  #>  7 Western      2019  3.5  lwr.ci chla  #>  8 Western      2019  5.44 medv   chla  #>  9 Western      2019  8.04 upr.ci chla  #> 10 Western      2018  3.89 lwr.ci chla  #> # … with 854 more rows #>  #> $mos #> # A tibble: 3,456 × 6 #>    bay_segment    yr    mo   val est   var   #>    <fct>       <dbl> <dbl> <dbl> <chr> <chr> #>  1 Western      2021    12 NA    medv  chla  #>  2 Western      2021    11 NA    medv  chla  #>  3 Western      2021    10 NA    medv  chla  #>  4 Western      2021     9 NA    medv  chla  #>  5 Western      2021     8 NA    medv  chla  #>  6 Western      2021     7 24.0  medv  chla  #>  7 Western      2021     6 12.0  medv  chla  #>  8 Western      2021     5  6.62 medv  chla  #>  9 Western      2021     4  6.72 medv  chla  #> 10 Western      2021     3 10.4  medv  chla  #> # … with 3,446 more rows anlz_attainpep(medpep) #> # A tibble: 96 × 4 #>    bay_segment    yr chla_sd outcome #>    <fct>       <dbl> <chr>   <chr>   #>  1 Western      2021 3_2     red     #>  2 Western      2020 2_2     red     #>  3 Western      2019 1_3     red     #>  4 Western      2018 1_3     red     #>  5 Western      2017 1_2     yellow  #>  6 Western      2016 0_2     yellow  #>  7 Western      2015 0_1     yellow  #>  8 Western      2014 0_0     green   #>  9 Western      2013 2_2     red     #> 10 Western      2012 2_3     red     #> # … with 86 more rows"},{"path":"https://tbep-tech.github.io/peptools/articles/Introduction.html","id":"plotting","dir":"Articles","previous_headings":"","what":"Plotting","title":"Introduction","text":"plotting functions used view station data, long-term trends bay segment, annual results overall water quality assessment. show_sitemappep() function produces interactive map medians water quality conditions station. Medians can shown chlorophyll, secchi depth, total nitrogen stations stations selected bay segments. point map shows median parameter, size color point proportion median values shown map. color scale median shows higher concentrations chlorophyll/total nitrogen shallower secchi depths red lower concentrations chlorophyll/total nitrogen deeper secchi depths blue. Hovering mouse pointer site location indicate site name median value. Clicking station point reveal underlying plot data. , 2020 chlorophyll medians shown stations bay segments. Medians given month can also shown. different year, parameter, bay segment can also chosen. Note size color ramps reversed secchi depth, smaller bluer points indicate larger secchi values. default, color size scaling show_sitemappep() relative points map. can view scaling relative values dataset (across time space) get sense values selected year compare rest record. can done changing relative argument TRUE. scaling also sensitive outliers. default use maximum scaling 99th percentile value observed entire dataset chosen parameter. Otherwise, results visually difficult interpret returned absolute maximum value used set scale. , however, want see scaling relative smaller quantile, can change value maxrel argument. size color ramps scaled defined upper quantile value. actual observed value point always visible mouseover. show_thrpep() function provides descriptive assessment annual trends chosen bay segment relative thresholds. plot, show annual medians non-parametric confidence internals (95%) across stations segment. red line shows annual trends horizontal blue line indicates threshold chlorophyll-.  can show plot secchi depth changing param = \"chla\" param = \"sd\". Note change horizontal reference lines secchi depth target. Secchi trends must also interpreted inversely chlorophyll, lower values generally indicate less desirable water quality.  Total nitrogen can also plotted.  year range plot can also specified using yrrng argument, default yrrng = c(1990, 2020).  show_allthrpep() function slight modification show_thrpep() shows annual median results bay segments combined. accepts similar arguments show_thrpep(). Note threshold values chlorophyll-Secchi depth can also shown thresholds vary segments. modification fo function required thresholds modified specific bay segments.  show_thrpep() function uses results anlz_medpep() function. example, can retrieve values plot follows: Similarly, show_boxpep() function provides assessment seasonal changes chlorophyll, secchi depth, total nitrogen values bay segment. recent year highlighted red default. allows simple evaluation recent year compared historical averages. threshold value shown blue text dotted line (shown total nitrogen). dotted line shown show_thrpep().   different subset years selected year interest can also viewed changing yrrng yrsel arguments. show 1980 compared monthly averages last ten years.  show_thrpep() function useful understand annual variation chlorophyll, secchi, total nitrogen bay segment. chlorophyll secchi, information plots can provide understanding annual reporting outcomes determined. outcome integer zero three assigned bay segment annual estimate chlorophyll secchi depth. outcomes based exceedance annual estimate threshold (blue lines show_thrpep()) duration exceedance years prior. following graphic describes logic [1]. Outcomes annual estimates water quality assigned integer value zero three depending magnitude duration exceedence. Peconic Estuary, light attenuation replaced Secchi depth. outcomes assigned chlorophyll secchi depth. duration criteria determined based whether exceedance observed years prior current year. exceedance criteria chlorophyll light-attenuation currently segment. peptools package contains peptargets data file reference determining annual outcomes. file loaded automatically package can viewed command line. final plotting function show_matrixpep(), creates annual reporting matrix reflects combined outcomes chlorophyll secchi depth. Tracking attainment outcomes provides framework bay management actions can developed initiated. year segment, color-coded management action assigned: Stay Course: Continue planned projects. Report data via annual progress reports Baywide Environmental Monitoring Report. Caution: Review monitoring data nitrogen loading estimates. Begin/continue TAC Management Board development specific management recommendations. Alert: Finalize development implement appropriate management actions get back track. management category action based combination outcomes chlorophyll secchi depth [1]. Management action categories assigned bay segment year based chlorophyll Secchi depth outcomes. results can viewed show_matrixpep().  matrix also ggplot object layout can changed using ggplot elements. Note use txtsz = NULL remove color labels.  preferred, matrix can also returned HTML table can sorted scrolled. Use sufficiently large number view entire matrix. Bay segment exceedances can also viewed matrix using show_wqmatrixpep(). met/met outcome categories indicate median /threshold. However, small/large exceedances used overall report card depend degree overlap confidence intervals threshold. matrix outcome simplification shows binary outcome (met/met) location median relative threshold.  default, show_wqmatrixpep() function returns chlorophyll exceedances segment. Secchi depth exceedances can viewed changing param argument. Note exceedances reversed, .e., lower values considered less desirable water quality conditions Secchi.  results show_matrixpep() secchi chlorophyll can combined individual segment using show_segmatrixpep() function. one segment can plotted function call.  Finally, plots selected segment can shown together using show_plotlypep() function combines chlorophyll secchi data. function combines outputs show_thrpep() show_segmatrixpep(). final plot interactive can zoomed dragging mouse pointer section plot. Information cell value can seen hovering location plot.","code":"show_sitemappep(dat, yrsel = 2021) show_sitemappep(dat, mosel = 7) show_sitemappep(dat, yrsel = 2010, param = 'sd', bay_segment = c('Central', 'Eastern')) show_sitemappep(dat, yrsel = 2021, relative = T) show_sitemappep(dat, yrsel = 2021, relative = T, maxrel = 0.8) show_thrpep(dat, bay_segment = \"Western\", param = \"chla\") show_thrpep(dat, bay_segment = \"Western\", param = \"sd\") show_thrpep(dat, bay_segment = \"Western\", param = \"tn\") show_thrpep(dat, bay_segment = \"Western\", param = \"chla\", yrrng = c(1976, 2021)) show_allthrpep(dat, param = \"chla\") dat %>%    anlz_medpep %>%    .[['ann']] %>%    filter(bay_segment == 'Western') %>%    filter(var == 'chla') %>%    filter(yr >= 1988 & yr <= 2021) #> # A tibble: 96 × 5 #>    bay_segment    yr   val est    var   #>    <fct>       <dbl> <dbl> <chr>  <chr> #>  1 Western      2021  7.07 lwr.ci chla  #>  2 Western      2021  9.35 medv   chla  #>  3 Western      2021 11.3  upr.ci chla  #>  4 Western      2020  3.72 lwr.ci chla  #>  5 Western      2020  4.64 medv   chla  #>  6 Western      2020  5.76 upr.ci chla  #>  7 Western      2019  3.5  lwr.ci chla  #>  8 Western      2019  5.44 medv   chla  #>  9 Western      2019  8.04 upr.ci chla  #> 10 Western      2018  3.89 lwr.ci chla  #> # … with 86 more rows show_boxpep(dat, param = 'chla', bay_segment = \"Western\") show_boxpep(dat, param = 'sd', bay_segment = \"Eastern\") show_boxpep(dat, param = 'chla', bay_segment = \"Western\", yrrng = c(2008, 2018), yrsel = 1990) peptargets #> # A tibble: 3 × 5 #>   bay_segment name    sd_thresh chla_thresh tn_thresh #>   <fct>       <fct>       <dbl>       <dbl>     <dbl> #> 1 Western     Western       6.5         5.5       0.4 #> 2 Central     Central       6.5         5.5       0.4 #> 3 Eastern     Eastern       6.5         5.5       0.4 show_matrixpep(dat) show_matrixpep(dat, txtsz = NULL) +   scale_y_continuous(expand = c(0,0), breaks = c(1976:2021)) +    coord_flip() +   theme(axis.text.x = element_text(angle = 45, hjust = 1, size = 7)) show_matrixpep(dat, asreact = TRUE) show_matrixpep(dat, asreact = TRUE, nrows = 200) show_wqmatrixpep(dat) show_wqmatrixpep(dat, param = 'sd') show_segmatrixpep(dat, bay_segment = 'Western') show_plotlypep(rawdat, bay_segment = 'Western')"},{"path":"https://tbep-tech.github.io/peptools/articles/Introduction.html","id":"testing-different-thresholds","dir":"Articles","previous_headings":"","what":"Testing different thresholds","title":"Introduction","text":"default, plotting functions use peptargets data frame included package, assigns threshold 6.5 ft secchi depth 5.5 ug/L chlorophyll segments. plotting arguments optional argument called trgs accepts user-provided thresholds. new data frame can passed argument evaluate different thresholds. following demonstrates create custom thresholds data frame (tibble specifically) use evaluate changes reporting outcomes. examples, perhaps less stringent thresholds required Western segment (lower secchi, higher chlorophyll) stringent thresholds required Eastern segment (higher secchi, lower chlorophyll). new data frame can passed plotting functions.  Comparing default values new results can easily done plotting two side side.","code":"segs <- c('Western', 'Central', 'Eastern') newtrgs <- data.frame(    bay_segment = factor(segs, levels = segs),   name = factor(segs, levels = segs),   sd_thresh = c(5.5, 6.5, 7.5),   chla_thresh = c(6, 5.5, 5),    stringsAsFactors = F ) newthr <- show_matrixpep(dat, trgs = newtrgs) newthr library(patchwork)  oldthr <- show_matrixpep(dat) oldthr + newthr + plot_layout(ncol = 2)"},{"path":"https://tbep-tech.github.io/peptools/articles/Introduction.html","id":"references","dir":"Articles","previous_headings":"","what":"References","title":"Introduction","text":"[1] . Janicki, D. Wade, J.R. Pribble, Development process track status chlorophyll light attenuation support seagrass restoration goals Tampa Bay, Tampa Bay National Estuary Program, St. Petersburg, Florida, 1999. https://tbeptech.org/TBEP_TECH_PUBS/2000/TBEP_04_00Chlor-.pdf.","code":""},{"path":"https://tbep-tech.github.io/peptools/articles/pathogens.html","id":"data-import-and-processing","dir":"Articles","previous_headings":"","what":"Data import and processing","title":"Beach Pathogens","text":"beaches data object includes 31 beaches relevant assessing pathogen exposure risk Peconic Estuary Program. beaches can mapped follows: pathogen data beaches can imported using read_pepent() function. function retrieves data directly ArcGIS REST service available https://gis.suffolkcountyny.gov/hosted/rest/services/Hosted/Beach_Water_Quality_Data/FeatureServer/. API queried beach names beaches data object. queries done individually beach exceed 2000 record limit. spreadhseet including data can also downloaded . import function used follows: raw data includes concentrations Enterococcus bacteria cfu/100 mL swimming beaches Suffolk County. fields include beach name (Name), field number (FieldNum), collection date time (Date Eastern Standard Time), bacteria concentration (value), status showing observation detection (indicated > <). function anlz_entpep() summarizes imported data beach quantify instances bacterial concentrations risk impacting human health. Suffolk County, bathing beaches ranked relative risk exposure harmful bacteria. Factors considered ranking include pollution threats (outfalls, discharges, runoff, marinas, etc.), beach location, historical monitoring data, beach use. beaches Peconic Estuary Tier 3 (lowest tier). peptools package, Enterococcus data used count number instances beach concentrations 104 cfu/ml. Although mean beach closed, relative exceedances provide coarse measure potential risk exposure harmful pathogens. anlz_entpep() function estimates exposure risk counting number instances year concentrations beach exceeded threshold 24 hour period dataset. results show samples number days sampled year number exceedances samples. 28 relevant beaches Peconic Estuary returned. anlz_entpep() function includes optional arguments threshold (thr). default values 104 cfu/100 mL, can easily changed. use threshold 50 cfu/100 mL.","code":"beaches #>                                                 Name FieldNum Tier #> 1                              Alberts Landing Beach      EH7    3 #> 2                                Camp Blue Bay Beach      EH2    2 #> 3                                Camp Quinipet Beach      ST1    3 #> 4                                   Clearwater Beach      EH3    3 #> 5  Cornell Cooperative Extension Marine Center Beach      S25    3 #> 6                           Crescent Beach - Suffolk      ST3    3 #> 7                              Culloden Shores Beach      EH4    3 #> 8                             Devon Yacht Club Beach     EH39    3 #> 9                              East Lake Drive Beach     EH12    3 #> 10                           Fifth Street Park Beach      S12    2 #> 11                                 Fleets Neck Beach      S16    3 #> 12                             Foster Memorial Beach      SH9    3 #> 13                            Founders Landing Beach      S14    2 #> 14                                 Goose Creek Beach      S13    2 #> 15                                      Havens Beach      EH1    2 #> 16                                   Maidstone Beach      EH5    3 #> 17                                    Meschutt Beach      SH5    3 #> 18                       Nassau Point Causeway Beach      S15    3 #> 19                                 New Suffolk Beach      S17    3 #> 20                        Norman E. Klipp Park Beach      S11    3 #> 21                          Perlman Music Camp Beach     ST10    3 #> 22                               Pridwin Hotel Beach      ST2    3 #> 23           Shelter Island Heights Beach Club Beach      ST6    2 #> 24                          Silver Sands Motel Beach      S26    3 #> 25                             South Jamesport Beach      R14    3 #> 26     Southampton Peconic Beach & Tennis Club Beach      SH7    3 #> 27                     Veteran's Memorial Park Beach      S18    3 #> 28                                       Wades Beach      ST4    3 #>               geometry #> 1  -72.11667, 41.00013 #> 2  -72.17883, 41.03910 #> 3  -72.37873, 41.07053 #> 4  -72.16710, 41.05097 #> 5  -72.38863, 41.03622 #> 6  -72.36563, 41.07412 #> 7  -71.94862, 41.07292 #> 8  -72.10570, 40.99253 #> 9  -71.93562, 41.07820 #> 10 -72.36612, 41.09298 #> 11 -72.46508, 41.00562 #> 12 -72.32688, 40.99640 #> 13 -72.41335, 41.06050 #> 14 -72.41348, 41.05227 #> 15 -72.28425, 41.00068 #> 16   -72.1862, 41.0344 #> 17 -72.49992, 40.89483 #> 18 -72.44713, 41.01513 #> 19 -72.47195, 40.98980 #> 20 -72.34915, 41.11078 #> 21 -72.37360, 41.07082 #> 22 -72.37558, 41.07012 #> 23 -72.35878, 41.08598 #> 24 -72.37583, 41.09417 #> 25 -72.56870, 40.94198 #> 26 -72.48165, 40.89703 #> 27 -72.53128, 40.97738 #> 28 -72.33427, 41.04942 library(mapview) mapview(beaches) entdat <- read_pepent() head(entdat) #>                    Name FieldNum                Date value status #> 1 Alberts Landing Beach      EH7 2010-06-29 19:00:00     4      < #> 2 Alberts Landing Beach      EH7 2010-07-27 19:00:00     4      < #> 3 Alberts Landing Beach      EH7 2010-08-13 19:00:00    28      = #> 4 Alberts Landing Beach      EH7 2011-06-22 19:00:00     4      < #> 5 Alberts Landing Beach      EH7 2011-07-20 19:00:00     4      < #> 6 Alberts Landing Beach      EH7 2011-08-17 19:00:00     4      < anlz_entpep(entdat) #> # A tibble: 336 × 4 #>    Name               yr samples exceedances #>    <chr>           <dbl>   <int>       <int> #>  1 Alberts Landing  2010       3           0 #>  2 Alberts Landing  2011       3           0 #>  3 Alberts Landing  2012       4           0 #>  4 Alberts Landing  2013       3           0 #>  5 Alberts Landing  2014       4           0 #>  6 Alberts Landing  2015       3           0 #>  7 Alberts Landing  2016       5           0 #>  8 Alberts Landing  2017       3           0 #>  9 Alberts Landing  2018       6           1 #> 10 Alberts Landing  2019       3           0 #> # … with 326 more rows anlz_entpep(entdat, thr = 50) #> # A tibble: 336 × 4 #>    Name               yr samples exceedances #>    <chr>           <dbl>   <int>       <int> #>  1 Alberts Landing  2010       3           0 #>  2 Alberts Landing  2011       3           0 #>  3 Alberts Landing  2012       4           0 #>  4 Alberts Landing  2013       3           0 #>  5 Alberts Landing  2014       4           0 #>  6 Alberts Landing  2015       3           0 #>  7 Alberts Landing  2016       5           0 #>  8 Alberts Landing  2017       3           0 #>  9 Alberts Landing  2018       6           1 #> 10 Alberts Landing  2019       3           0 #> # … with 326 more rows"},{"path":"https://tbep-tech.github.io/peptools/articles/pathogens.html","id":"plotting-results","dir":"Articles","previous_headings":"","what":"Plotting results","title":"Beach Pathogens","text":"summary graphic can plotted using show_entmatrix() function. creates annual reporting matrix relative risk pathogen exposure 28 selected beaches Peconic Estuary. Tracking number exceedances bacterial concentrations provides framework identifying locations may need management actions remediate potential public health issues. Exceedances Enterococcus concentrations Peconic Estuary bathing beaches years 2010 2021. Values number samples exceeding. anlz_entpep() function used internally show_entmatrix(), optional argument threshold (thr) also applies plotting function. Appropriate thresholds identified. Potential alternatives can viewed using different value thr argument. Exceedances Enterococcus concentrations Peconic Estuary bathing beaches years 2010 2021. different option used threshold argument. matrix also ggplot object layout can changed using ggplot elements. Note use txtsz = NULL remove text labels.","code":"show_entmatrix(entdat) show_entmatrix(entdat, thr = 35) show_entmatrix(entdat, txtsz = NULL) +   scale_x_discrete(expand = c(0,0), breaks = c(2000:2021)) +    coord_flip() +   theme(axis.text.x = element_text(angle = 60, hjust = 1, size = 7))"},{"path":"https://tbep-tech.github.io/peptools/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Marcus Beck. Author, maintainer. Gerold Morrison. Author. Holly Greening. Author.","code":""},{"path":"https://tbep-tech.github.io/peptools/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Beck M, Morrison G, Greening H (2022). peptools: Analysis Tools Importing, Wrangling, Summarizing Suffolk County Water Quality Data. R package version 1.0.0.9000, https://tbep-tech.github.io/peptools.","code":"@Manual{,   title = {peptools: Analysis Tools for Importing, Wrangling, and Summarizing Suffolk County Water Quality Data},   author = {Marcus Beck and Gerold Morrison and Holly Greening},   year = {2022},   note = {R package version 1.0.0.9000},   url = {https://tbep-tech.github.io/peptools}, }"},{"path":"https://tbep-tech.github.io/peptools/index.html","id":"readme","dir":"","previous_headings":"","what":"Analysis Tools for Importing, Wrangling, and Summarizing Suffolk County Water Quality Data","title":"Analysis Tools for Importing, Wrangling, and Summarizing Suffolk County Water Quality Data","text":"Analysis tools importing, wrangling, summarizing indicator data relevant Peconic Estuary Partnersip.","code":""},{"path":"https://tbep-tech.github.io/peptools/index.html","id":"installing-peptools","dir":"","previous_headings":"","what":"Installing peptools","title":"Analysis Tools for Importing, Wrangling, and Summarizing Suffolk County Water Quality Data","text":"Begin installing package r-universe. source code available tbep-tech GitHub group web page: https://github.com/tbep-tech/peptools. Note peptools needs installed , needs loaded every new R session (.e., library(peptools)).","code":"# enable repos options(repos = c(     tbeptech = 'https://tbep-tech.r-universe.dev',     CRAN = 'https://cloud.r-project.org'))  # install peptools install.packages('peptools')  # load peptools library(peptools)"},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_attainpep.html","id":null,"dir":"Reference","previous_headings":"","what":"Get attainment categories — anlz_attainpep","title":"Get attainment categories — anlz_attainpep","text":"Get attainment categories year bay segment using chlorophyll secchi depth","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_attainpep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get attainment categories — anlz_attainpep","text":"","code":"anlz_attainpep(meddat, magdurout = FALSE, trgs = NULL)"},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_attainpep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get attainment categories — anlz_attainpep","text":"meddat result returned anlz_medpep magdurout logical indicating separate magnitude duration estimates returned trgs optional data.frame annual bay segment water quality targets, defaults peptargets","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_attainpep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get attainment categories — anlz_attainpep","text":"data.frame year bay segment showing attainment category","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_attainpep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Get attainment categories — anlz_attainpep","text":"","code":"meddat <- anlz_medpep(rawdat) anlz_attainpep(meddat) #> # A tibble: 96 × 4 #>    bay_segment    yr chla_sd outcome #>    <fct>       <dbl> <chr>   <chr>   #>  1 Western      2021 3_2     red     #>  2 Western      2020 2_2     red     #>  3 Western      2019 1_3     red     #>  4 Western      2018 1_3     red     #>  5 Western      2017 1_2     yellow  #>  6 Western      2016 0_2     yellow  #>  7 Western      2015 0_1     yellow  #>  8 Western      2014 0_0     green   #>  9 Western      2013 2_2     red     #> 10 Western      2012 2_3     red     #> # … with 86 more rows"},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_dodlypep.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze daily DO values relative to threshold — anlz_dodlypep","title":"Analyze daily DO values relative to threshold — anlz_dodlypep","text":"Analyze daily values relative threshold","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_dodlypep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze daily DO values relative to threshold — anlz_dodlypep","text":"","code":"anlz_dodlypep(dodat, thr = 3, impute = TRUE)"},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_dodlypep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze daily DO values relative to threshold — anlz_dodlypep","text":"dodat result returned read_pepdo thr numeric indicating appropriate dissolved oxygen thresholds, usually 3 mg/L acute, 4.8 mg/L chronic impute logical indicating missing dissolved oxygen values imputed year, month, site average","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_dodlypep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze daily DO values relative to threshold — anlz_dodlypep","text":"data.frame","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_dodlypep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze daily DO values relative to threshold — anlz_dodlypep","text":"dodat data object can used input without downloading USGS data impute = TRUE, missing dissolved oxygen values complete daily time series imputed average year, month, site combination. often necessary create summary values make sense. example, month incomplete data, maximum below_cumsum value show 30 31 days even every day observed record threshold.","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_dodlypep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze daily DO values relative to threshold — anlz_dodlypep","text":"","code":"data(dodat) dat <- anlz_dodlypep(dodat) dat #> # A tibble: 6,574 × 7 #>    site          Date          yr    mo do_mgl below below_cumsum #>    <fct>         <date>     <dbl> <dbl>  <dbl> <dbl>        <dbl> #>  1 Peconic River 2013-01-01  2013     1   11.0     0            0 #>  2 Peconic River 2013-01-02  2013     1   11.3     0            0 #>  3 Peconic River 2013-01-03  2013     1   11.6     0            0 #>  4 Peconic River 2013-01-04  2013     1   11.6     0            0 #>  5 Peconic River 2013-01-05  2013     1   11.7     0            0 #>  6 Peconic River 2013-01-06  2013     1   11.8     0            0 #>  7 Peconic River 2013-01-07  2013     1   12.0     0            0 #>  8 Peconic River 2013-01-08  2013     1   12.1     0            0 #>  9 Peconic River 2013-01-09  2013     1   12.0     0            0 #> 10 Peconic River 2013-01-10  2013     1   11.7     0            0 #> # … with 6,564 more rows"},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_domopep.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze monthly DO values relative to threshold — anlz_domopep","title":"Analyze monthly DO values relative to threshold — anlz_domopep","text":"Analyze monthly values relative threshold","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_domopep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze monthly DO values relative to threshold — anlz_domopep","text":"","code":"anlz_domopep(dodat, thr = 3, impute = TRUE)"},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_domopep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze monthly DO values relative to threshold — anlz_domopep","text":"dodat result returned read_pepdo thr numeric indicating appropriate dissolved oxygen thresholds, usually 3 mg/L acute, 4.8 mg/L chronic impute logical indicating missing dissolved oxygen values imputed year, month, site average","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_domopep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze monthly DO values relative to threshold — anlz_domopep","text":"data.frame","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_domopep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Analyze monthly DO values relative to threshold — anlz_domopep","text":"dodat data object can used input without downloading USGS data date summarized three different values, do_mgl average daily averages across month, below_ave proportion days month concentrations given day fell threshold (1 mean days instance threshold, 0 mean none), below_maxrun maximum number sequential days month concentrations given day fell threshold (30 31, depending month, indicate days month instance threshold). impute = TRUE, missing dissolved oxygen values complete daily time series imputed average year, month, site combination.  often necessary create summary values make sense. example, month incomplete data, below_ave summary may indicate value one daily averages available data threshold, whereas below_maxrun summary may indicate maximum run days equal number days month.","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_domopep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Analyze monthly DO values relative to threshold — anlz_domopep","text":"","code":"data(dodat) dat <- anlz_domopep(dodat) dat #> # A tibble: 216 × 6 #>    site             yr mo    do_mgl below_ave below_maxrun #>    <fct>         <dbl> <ord>  <dbl>     <dbl>        <dbl> #>  1 Peconic River  2013 Jan    11.6      0                0 #>  2 Peconic River  2013 Feb    11.9      0                0 #>  3 Peconic River  2013 Mar    11.7      0                0 #>  4 Peconic River  2013 Apr     9.55     0                0 #>  5 Peconic River  2013 May     7.90     0                0 #>  6 Peconic River  2013 Jun     5.73     0.3              5 #>  7 Peconic River  2013 Jul     3.12     0.871           11 #>  8 Peconic River  2013 Aug     3.13     0.774           15 #>  9 Peconic River  2013 Sep     4.81     0.633            6 #> 10 Peconic River  2013 Oct     6.03     0.258            7 #> # … with 206 more rows"},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_entpep.html","id":null,"dir":"Reference","previous_headings":"","what":"Count beach exceedances for enterococcus — anlz_entpep","title":"Count beach exceedances for enterococcus — anlz_entpep","text":"Count beach exceedances enterococcus","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_entpep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Count beach exceedances for enterococcus — anlz_entpep","text":"","code":"anlz_entpep(entdat, thr = 104)"},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_entpep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Count beach exceedances for enterococcus — anlz_entpep","text":"entdat result returned read_pepent thr numeric value defining threshold exceedance","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_entpep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Count beach exceedances for enterococcus — anlz_entpep","text":"data.frame counts exceedances per year beach","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_entpep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Count beach exceedances for enterococcus — anlz_entpep","text":"exceedance threshold set default 104 cfu/100 ml criterion.  simply based counts year value station threshold 24 hour period record. samples column shows many days year sampled beach exceedances column shows many samples threshold.","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_entpep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Count beach exceedances for enterococcus — anlz_entpep","text":"","code":"anlz_entpep(entdat) #> # A tibble: 336 × 4 #>    Name               yr samples exceedances #>    <chr>           <dbl>   <int>       <int> #>  1 Alberts Landing  2010       3           0 #>  2 Alberts Landing  2011       3           0 #>  3 Alberts Landing  2012       4           0 #>  4 Alberts Landing  2013       3           0 #>  5 Alberts Landing  2014       4           0 #>  6 Alberts Landing  2015       3           0 #>  7 Alberts Landing  2016       5           0 #>  8 Alberts Landing  2017       3           0 #>  9 Alberts Landing  2018       6           1 #> 10 Alberts Landing  2019       3           0 #> # … with 326 more rows"},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_medpep.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate annual medians — anlz_medpep","title":"Estimate annual medians — anlz_medpep","text":"Estimate annual medians segment chlorophyll, secchi, total nitrogen data","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_medpep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate annual medians — anlz_medpep","text":"","code":"anlz_medpep(dat)"},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_medpep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate annual medians — anlz_medpep","text":"dat data.frame formatted read_pepwq","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_medpep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate annual medians — anlz_medpep","text":"Median estimates chlorophyll, secchi, total nitrogen","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/anlz_medpep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Estimate annual medians — anlz_medpep","text":"","code":"# view median estimates anlz_medpep(rawdat) #> $ann #> # A tibble: 864 × 5 #>    bay_segment    yr   val est    var   #>    <fct>       <dbl> <dbl> <chr>  <chr> #>  1 Western      2021  7.07 lwr.ci chla  #>  2 Western      2021  9.35 medv   chla  #>  3 Western      2021 11.3  upr.ci chla  #>  4 Western      2020  3.72 lwr.ci chla  #>  5 Western      2020  4.64 medv   chla  #>  6 Western      2020  5.76 upr.ci chla  #>  7 Western      2019  3.5  lwr.ci chla  #>  8 Western      2019  5.44 medv   chla  #>  9 Western      2019  8.04 upr.ci chla  #> 10 Western      2018  3.89 lwr.ci chla  #> # … with 854 more rows #>  #> $mos #> # A tibble: 3,456 × 6 #>    bay_segment    yr    mo   val est   var   #>    <fct>       <dbl> <dbl> <dbl> <chr> <chr> #>  1 Western      2021    12 NA    medv  chla  #>  2 Western      2021    11 NA    medv  chla  #>  3 Western      2021    10 NA    medv  chla  #>  4 Western      2021     9 NA    medv  chla  #>  5 Western      2021     8 NA    medv  chla  #>  6 Western      2021     7 24.0  medv  chla  #>  7 Western      2021     6 12.0  medv  chla  #>  8 Western      2021     5  6.62 medv  chla  #>  9 Western      2021     4  6.72 medv  chla  #> 10 Western      2021     3 10.4  medv  chla  #> # … with 3,446 more rows #>"},{"path":"https://tbep-tech.github.io/peptools/reference/beaches.html","id":null,"dir":"Reference","previous_headings":"","what":"Bathing beaches — beaches","title":"Bathing beaches — beaches","text":"Bathing beaches","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/beaches.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bathing beaches — beaches","text":"","code":"beaches"},{"path":"https://tbep-tech.github.io/peptools/reference/beaches.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bathing beaches — beaches","text":"data.frame object","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/beaches.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bathing beaches — beaches","text":"","code":"if (FALSE) {  library(sf) library(dplyr)  beaches <- read.csv('inst/extdata/beaches.csv') %>%    st_as_sf(      coords = c('Longitude', 'Latitude'),       crs = '+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs'   )  save(beaches, file = 'data/beaches.RData')  }"},{"path":"https://tbep-tech.github.io/peptools/reference/dodat.html","id":null,"dir":"Reference","previous_headings":"","what":"Dissolved oxygen data for USGS stations — dodat","title":"Dissolved oxygen data for USGS stations — dodat","text":"Dissolved oxygen data USGS stations","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/dodat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Dissolved oxygen data for USGS stations — dodat","text":"","code":"dodat"},{"path":"https://tbep-tech.github.io/peptools/reference/dodat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Dissolved oxygen data for USGS stations — dodat","text":"data.frame object","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/dodat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Dissolved oxygen data for USGS stations — dodat","text":"","code":"if (FALSE) {  # 01304562 is Peconic River, 01304200 is Orient Harbor dodat <- read_pepdo(site = c('01304562', '01304200'), nms = c('Peconic River', 'Orient Harbor'))  save(dodat, file = 'data/dodat.RData', compress = 'xz')  }"},{"path":"https://tbep-tech.github.io/peptools/reference/entdat.html","id":null,"dir":"Reference","previous_headings":"","what":"Raw beach pathogen data from Suffolk County — entdat","title":"Raw beach pathogen data from Suffolk County — entdat","text":"Raw beach pathogen data Suffolk County","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/entdat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raw beach pathogen data from Suffolk County — entdat","text":"","code":"entdat"},{"path":"https://tbep-tech.github.io/peptools/reference/entdat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Raw beach pathogen data from Suffolk County — entdat","text":"data.frame object","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/entdat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raw beach pathogen data from Suffolk County — entdat","text":"","code":"if (FALSE) { entdat <- read_pepent() save(entdat, file = 'data/entdat.RData', compress = 'xz') }"},{"path":"https://tbep-tech.github.io/peptools/reference/pepseg.html","id":null,"dir":"Reference","previous_headings":"","what":"Polygon shapefile of segment boundaries — pepseg","title":"Polygon shapefile of segment boundaries — pepseg","text":"Polygon shapefile segment boundaries","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/pepseg.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Polygon shapefile of segment boundaries — pepseg","text":"","code":"pepseg"},{"path":"https://tbep-tech.github.io/peptools/reference/pepseg.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Polygon shapefile of segment boundaries — pepseg","text":"sf object","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/pepseg.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Polygon shapefile of segment boundaries — pepseg","text":"","code":"if (FALSE) { library(sf) library(dplyr)  pepseg <- st_read('~/Desktop/TBEP/Peconic/PEPSegments/PEP_Segments.shp') %>%   st_transform(crs = '+proj=longlat +ellps=WGS84 +datum=WGS84 +no_defs') %>%    mutate(     bay_segment = case_when(       NAME == 'Segment3' ~ 'Eastern',        NAME == 'Segment2' ~ 'Central',        NAME == 'Segment1' ~ 'Western',      )   ) %>%    select(bay_segment) %>%    st_buffer(dist = 0) %>%    st_crop(xmin = -72.76, xmax = -71.8, ymin = 40.83, ymax = 41.2)   save(pepseg, file = 'data/pepseg.RData', compress = 'xz') }"},{"path":"https://tbep-tech.github.io/peptools/reference/pepstations.html","id":null,"dir":"Reference","previous_headings":"","what":"Bay stations by segment — pepstations","title":"Bay stations by segment — pepstations","text":"Bay stations segment","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/pepstations.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bay stations by segment — pepstations","text":"","code":"pepstations"},{"path":"https://tbep-tech.github.io/peptools/reference/pepstations.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bay stations by segment — pepstations","text":"data.frame object","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/pepstations.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bay stations by segment — pepstations","text":"","code":"if (FALSE) { library(tidyr) library(sf) library(dplyr) library(readxl) library(mapedit) library(mapview)  prj <- 4326  locs <- read_xlsx('inst/extdata/stationmeta.xlsx') %>%   select(BayStation = `Station Number`, StationName, Longitude = LON, Latitude = LAT) %>%   mutate(     BayStation = as.character(BayStation)   ) %>%    sf::st_as_sf(coords = c(\"Longitude\", \"Latitude\"), crs = prj)  # # use this for spatial selection # p <- mapview(locs) # e1 <- editMap(p) # locs[e1$finished, ] %>% pull(BayStation) %>% dput  pepstations <- list(   Western = c(\"60280\", \"60275\", \"60270\", \"60265\", \"60266\", \"60260\", \"60250\",                \"60240\", \"60230\", \"60210\", \"60220\", \"60170\", \"60101\", \"60130\",                \"60290\", \"60148\"),   Central = c(\"60102\", \"60103\", \"60113\", \"60104\", \"60300\", \"60105\", \"60106\",                \"60107\", \"60310\", \"60320\", \"60114\", \"60109\", \"60340\", \"60121\",                \"60124\", \"60119\", \"60127\", \"60126\", \"60111\", \"60131\", \"60118\"),   Eastern = c(\"60122\", \"60115\", \"60116\", \"60330\", \"60132\", \"60137\", \"60133\",                \"60134\", \"60135\") ) %>%   tibble::enframe('bay_segment', 'BayStation') %>%   unnest(BayStation) %>%   left_join(locs, ., by = 'BayStation') crds <- st_coordinates(pepstations) pepstations <- pepstations %>%   st_set_geometry(NULL) %>%   mutate(     Longitude = crds[, 1],     Latitude = crds[, 2],      bay_segment = factor(bay_segment, levels = c('Western', 'Central', 'Eastern'))   )  save(pepstations, file = 'data/pepstations.RData', compress = 'xz') }"},{"path":"https://tbep-tech.github.io/peptools/reference/peptargets.html","id":null,"dir":"Reference","previous_headings":"","what":"Bay segment targets — peptargets","title":"Bay segment targets — peptargets","text":"Bay segment targets","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/peptargets.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Bay segment targets — peptargets","text":"","code":"peptargets"},{"path":"https://tbep-tech.github.io/peptools/reference/peptargets.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Bay segment targets — peptargets","text":"data.frame object","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/peptargets.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Bay segment targets — peptargets","text":"","code":"if (FALSE) { peptargets <- tibble::tibble(   bay_segment = factor(c('Western', 'Central', 'Eastern'),      levels = c('Western', 'Central', 'Eastern')),    name = factor(c('Western', 'Central', 'Eastern'),      levels = c('Western', 'Central', 'Eastern')),    sd_thresh = c(6.5, 6.5, 6.5),   chla_thresh = c(5.5, 5.5, 5.5),    tn_thresh = c(0.4, 0.4, 0.4) ) save(peptargets, file = 'data/peptargets.RData', compress= 'xz') }"},{"path":"https://tbep-tech.github.io/peptools/reference/rawdat.html","id":null,"dir":"Reference","previous_headings":"","what":"Raw data from Suffolk County — rawdat","title":"Raw data from Suffolk County — rawdat","text":"Raw data Suffolk County","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/rawdat.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Raw data from Suffolk County — rawdat","text":"","code":"rawdat"},{"path":"https://tbep-tech.github.io/peptools/reference/rawdat.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Raw data from Suffolk County — rawdat","text":"data.frame object","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/rawdat.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Raw data from Suffolk County — rawdat","text":"","code":"if (FALSE) { path <- system.file(\"extdata\", \"currentdata.xlsx\", package=\"peptools\") rawdat <- read_pepwq(path) save(rawdat, file = 'data/rawdat.RData', compress = 'xz') }"},{"path":"https://tbep-tech.github.io/peptools/reference/read_pepdo.html","id":null,"dir":"Reference","previous_headings":"","what":"Import dissolved oxygen data — read_pepdo","title":"Import dissolved oxygen data — read_pepdo","text":"Import dissolved oxygen data","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/read_pepdo.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import dissolved oxygen data — read_pepdo","text":"","code":"read_pepdo(   site = c(\"01304562\", \"01304200\"),   nms = NULL,   startDate = \"2013-01-01\",   endDate = \"2021-12-31\" )"},{"path":"https://tbep-tech.github.io/peptools/reference/read_pepdo.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import dissolved oxygen data — read_pepdo","text":"site chr string site numbers USGS stations nms optional chr string vector names reassign site numbers startDate chr string start date YYYY-MM-DD endDate chr string end date YYYY-MM-DD","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/read_pepdo.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import dissolved oxygen data — read_pepdo","text":"data.frame","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/read_pepdo.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import dissolved oxygen data — read_pepdo","text":"Raw data downloaded using USGS dataRetrieval R package, function simple wrapper readNWISuv function. Note downloading station data default arguments may take minutes. Site 01304562 Peconic River, 01304200 Orient Harbor.","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/read_pepdo.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import dissolved oxygen data — read_pepdo","text":"","code":"if (FALSE) { dodat <- read_pepdo(site = c('01304562', '01304200'), nms = c('Peconic R.', 'Orient Harbor'),       startDate = '2020-06-01', endDate = '2021-06-30') dodat }"},{"path":"https://tbep-tech.github.io/peptools/reference/read_pepent.html","id":null,"dir":"Reference","previous_headings":"","what":"Import raw enterococcus data — read_pepent","title":"Import raw enterococcus data — read_pepent","text":"Import raw enterococcus data","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/read_pepent.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import raw enterococcus data — read_pepent","text":"","code":"read_pepent()"},{"path":"https://tbep-tech.github.io/peptools/reference/read_pepent.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import raw enterococcus data — read_pepent","text":"data.frame","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/read_pepent.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import raw enterococcus data — read_pepent","text":"Data ArcGIS REST Services https://gis.suffolkcountyny.gov/hosted/rest/services/Hosted/Beach_Water_Quality_Data/FeatureServer/. API queried beach names beaches data object. queries done individually beach exceed 2000 record limit.","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/read_pepent.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import raw enterococcus data — read_pepent","text":"","code":"if (FALSE) { entdat <- read_pepent() } head(entdat) #>                    Name FieldNum                Date value status #> 1 Alberts Landing Beach      EH7 2010-06-29 19:00:00     4      < #> 2 Alberts Landing Beach      EH7 2010-07-27 19:00:00     4      < #> 3 Alberts Landing Beach      EH7 2010-08-13 19:00:00    28      = #> 4 Alberts Landing Beach      EH7 2011-06-22 19:00:00     4      < #> 5 Alberts Landing Beach      EH7 2011-07-20 19:00:00     4      < #> 6 Alberts Landing Beach      EH7 2011-08-17 19:00:00     4      <"},{"path":"https://tbep-tech.github.io/peptools/reference/read_pepwq.html","id":null,"dir":"Reference","previous_headings":"","what":"Import raw water quality data — read_pepwq","title":"Import raw water quality data — read_pepwq","text":"Import raw water quality data","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/read_pepwq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Import raw water quality data — read_pepwq","text":"","code":"read_pepwq(path)"},{"path":"https://tbep-tech.github.io/peptools/reference/read_pepwq.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Import raw water quality data — read_pepwq","text":"path chr string path excel file","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/read_pepwq.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Import raw water quality data — read_pepwq","text":"data.frame","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/read_pepwq.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Import raw water quality data — read_pepwq","text":"Raw data https://gis.suffolkcountyny.gov/portal/home/item.html?id=5d4b53ec44204219a8da685f1859e096 data prior 1990 removed - exist data scarce.","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/read_pepwq.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Import raw water quality data — read_pepwq","text":"","code":"path <- system.file(\"extdata\", \"currentdata.xlsx\", package=\"peptools\") dat <- read_pepwq(path) dat #> # A tibble: 37,539 × 11 #>    Date       BayStation name  value status    yr    mo Statio…¹ bay_s…² Longi…³ #>    <date>     <chr>      <chr> <dbl> <chr>  <dbl> <dbl> <chr>    <fct>     <dbl> #>  1 1990-01-31 60113      chla    4.8 \"\"      1990     1 Little … Central   -72.4 #>  2 1990-01-31 60113      sd      8   \"\"      1990     1 Little … Central   -72.4 #>  3 1990-01-31 60114      chla    2.8 \"\"      1990     1 Paradis… Central   -72.4 #>  4 1990-01-31 60114      sd     12   \"\"      1990     1 Paradis… Central   -72.4 #>  5 1990-01-31 60115      chla    8.5 \"\"      1990     1 Orient … Eastern   -72.3 #>  6 1990-01-31 60115      sd      7   \"\"      1990     1 Orient … Eastern   -72.3 #>  7 1990-01-31 60116      chla    7.5 \"\"      1990     1 Gardine… Eastern   -72.3 #>  8 1990-01-31 60116      sd      7.5 \"\"      1990     1 Gardine… Eastern   -72.3 #>  9 1990-01-31 60118      chla    7.3 \"\"      1990     1 Northwe… Central   -72.3 #> 10 1990-01-31 60118      sd      7   \"\"      1990     1 Northwe… Central   -72.3 #> # … with 37,529 more rows, 1 more variable: Latitude <dbl>, and abbreviated #> #   variable names ¹​StationName, ²​bay_segment, ³​Longitude"},{"path":"https://tbep-tech.github.io/peptools/reference/show_allthrpep.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot annual water quality value and thresholds for all segments — show_allthrpep","title":"Plot annual water quality value and thresholds for all segments — show_allthrpep","text":"Plot annual water quality values thresholds bay segments","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_allthrpep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot annual water quality value and thresholds for all segments — show_allthrpep","text":"","code":"show_allthrpep(   dat,   param = c(\"chla\", \"sd\", \"tn\"),   trgs = NULL,   yrrng = NULL,   family = NA,   labelexp = TRUE,   txtlab = TRUE )"},{"path":"https://tbep-tech.github.io/peptools/reference/show_allthrpep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot annual water quality value and thresholds for all segments — show_allthrpep","text":"dat data frame data returned read_pepwq param chr string indicating water quality value appropriate threshold plot, one \"chla\" chlorophyll, \"sd\" secchi depth, \"tn\" total nitrogen trgs optional data.frame annual bay segment water quality thresholds, defaults peptargets yrrng numeric vector indicating min, max years include family optional chr string indicating font family text labels labelexp logical indicating y axis target labels plotted expressions, default TRUE txtlab logical indicating text label target value shown plot","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_allthrpep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot annual water quality value and thresholds for all segments — show_allthrpep","text":"ggplot object","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_allthrpep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot annual water quality value and thresholds for all segments — show_allthrpep","text":"function conceptually similar show_thrpep, results shown annual medians across bay segments selected parameter.","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_allthrpep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot annual water quality value and thresholds for all segments — show_allthrpep","text":"","code":"show_allthrpep(rawdat, param = 'chl')"},{"path":"https://tbep-tech.github.io/peptools/reference/show_boxpep.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot monthly chlorophyll, secchi, or tn values values for a segment — show_boxpep","title":"Plot monthly chlorophyll, secchi, or tn values values for a segment — show_boxpep","text":"Plot monthly chlorophyl, secchi, tn values values bay segment","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_boxpep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot monthly chlorophyll, secchi, or tn values values for a segment — show_boxpep","text":"","code":"show_boxpep(   dat,   param = c(\"chla\", \"sd\", \"tn\"),   yrsel = NULL,   yrrng = NULL,   ptsz = 0.5,   bay_segment = c(\"Western\", \"Central\", \"Eastern\"),   trgs = NULL,   family = NA,   labelexp = TRUE,   txtlab = TRUE )"},{"path":"https://tbep-tech.github.io/peptools/reference/show_boxpep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot monthly chlorophyll, secchi, or tn values values for a segment — show_boxpep","text":"dat data frame data returned read_pepwq param chr string indicating water quality value appropriate threshold plot, one \"chla\" chlorophyll, \"sd\" secchi depth, \"tn\" total nitrogen yrsel numeric year emphasize, shown separate red points plot yrrng numeric vector indicating min, max years include ptsz numeric indicating point size observations yrsel bay_segment chr string bay segment, one \"Western\", \"Central\", \"Eastern\" trgs optional data.frame annual bay segment water quality targets, defaults peptargets family optional chr string indicating font family text labels labelexp logical indicating y axis target labels plotted expressions, default TRUE txtlab logical indicating text label target value shown plot","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_boxpep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot monthly chlorophyll, secchi, or tn values values for a segment — show_boxpep","text":"ggplot object","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_boxpep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Plot monthly chlorophyll, secchi, or tn values values for a segment — show_boxpep","text":"Points included yrsel plotted box plots using position_jitter. Use ptsz = -1 suppress.","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_boxpep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot monthly chlorophyll, secchi, or tn values values for a segment — show_boxpep","text":"","code":"show_boxpep(rawdat, bay_segment = 'Western') #> Warning: Removed 27 rows containing non-finite values (stat_boxplot). #> Warning: Removed 27 rows containing missing values (geom_point). #> Warning: Removed 6 rows containing missing values (geom_point)."},{"path":"https://tbep-tech.github.io/peptools/reference/show_domatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a colorized table for reporting dissolved oxygen data — show_domatrix","title":"Create a colorized table for reporting dissolved oxygen data — show_domatrix","text":"Create colorized table reporting dissolved oxygen data","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_domatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a colorized table for reporting dissolved oxygen data — show_domatrix","text":"","code":"show_domatrix(   dodat,   show = c(\"below_ave\", \"below_maxrun\"),   txtsz = 3,   thr = 4.8,   impute = TRUE,   yrrng = NULL,   family = NA )"},{"path":"https://tbep-tech.github.io/peptools/reference/show_domatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a colorized table for reporting dissolved oxygen data — show_domatrix","text":"dodat data frame dissolved oxygen data returned read_pepdo show chr string indicating summary value plot anlz_domopep, one 'below_ave' 'below_maxrun' txtsz numeric size text plot, applies asreact = FALSE thr numeric indicating appropriate dissolved oxygen thresholds, usually 3 mg/L acute, 4.8 mg/L chronic impute logical indicating missing dissolved oxygen values imputed year, month, site average yrrng numeric vector indicating min, max years include family optional chr string indicating font family text labels","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_domatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a colorized table for reporting dissolved oxygen data — show_domatrix","text":"static ggplot object returned.","code":""},{"path":[]},{"path":"https://tbep-tech.github.io/peptools/reference/show_domatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a colorized table for reporting dissolved oxygen data — show_domatrix","text":"","code":"show_domatrix(dodat)"},{"path":"https://tbep-tech.github.io/peptools/reference/show_entmatrix.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a colorized table for beach pathogen exceedances — show_entmatrix","title":"Create a colorized table for beach pathogen exceedances — show_entmatrix","text":"Create colorized table beach pathogen exceedances","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_entmatrix.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a colorized table for beach pathogen exceedances — show_entmatrix","text":"","code":"show_entmatrix(entdat, txtsz = 2, thr = 104, yrrng = NULL, family = NA)"},{"path":"https://tbep-tech.github.io/peptools/reference/show_entmatrix.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a colorized table for beach pathogen exceedances — show_entmatrix","text":"entdat data frame enterococcus data returned read_pepent txtsz numeric size text plot, applies asreact = FALSE thr numeric value defining threshold exceedance yrrng numeric vector indicating min, max years include family optional chr string indicating font family text labels","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_entmatrix.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a colorized table for beach pathogen exceedances — show_entmatrix","text":"static ggplot object returned asreact = FALSE, otherwise reactable table returned","code":""},{"path":[]},{"path":"https://tbep-tech.github.io/peptools/reference/show_entmatrix.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a colorized table for beach pathogen exceedances — show_entmatrix","text":"","code":"show_entmatrix(entdat)"},{"path":"https://tbep-tech.github.io/peptools/reference/show_matrixpep.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a colorized table for indicator reporting — show_matrixpep","title":"Create a colorized table for indicator reporting — show_matrixpep","text":"Create colorized table indicator reporting","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_matrixpep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a colorized table for indicator reporting — show_matrixpep","text":"","code":"show_matrixpep(   dat,   txtsz = 3,   trgs = NULL,   yrrng = NULL,   bay_segment = c(\"Western\", \"Central\", \"Eastern\"),   asreact = FALSE,   nrows = 10,   abbrev = FALSE,   family = NA )"},{"path":"https://tbep-tech.github.io/peptools/reference/show_matrixpep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a colorized table for indicator reporting — show_matrixpep","text":"dat data frame water quality data returned read_pepwq txtsz numeric size text plot, applies asreact = FALSE trgs optional data.frame annual bay segment water quality targets, defaults peptargets yrrng numeric vector indicating min, max years include bay_segment chr string bay segments include, one \"Western\", \"Central\", \"Eastern\" asreact logical indicating reactable object returned nrows asreact = TRUE, numeric specifying number rows table abbrev logical indicating text labels plot abbreviated first letter family optional chr string indicating font family text labels","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_matrixpep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a colorized table for indicator reporting — show_matrixpep","text":"static ggplot object returned asreact = FALSE, otherwise reactable table returned","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_matrixpep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a colorized table for indicator reporting — show_matrixpep","text":"","code":"show_matrixpep(rawdat)"},{"path":"https://tbep-tech.github.io/peptools/reference/show_plotlypep.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot chlorophyll and secchi data together with matrix outcomes — show_plotlypep","title":"Plot chlorophyll and secchi data together with matrix outcomes — show_plotlypep","text":"Plot chlorophyll secchi data together matrix outcomes","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_plotlypep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot chlorophyll and secchi data together with matrix outcomes — show_plotlypep","text":"","code":"show_plotlypep(   dat,   bay_segment = c(\"Western\", \"Central\", \"Eastern\"),   yrrng = NULL )"},{"path":"https://tbep-tech.github.io/peptools/reference/show_plotlypep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot chlorophyll and secchi data together with matrix outcomes — show_plotlypep","text":"dat data.frame formatted read_pepwq bay_segment chr string bay segment, one \"Western\", \"Central\", \"Eastern\" yrrng numeric year range plot","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_plotlypep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot chlorophyll and secchi data together with matrix outcomes — show_plotlypep","text":"interactive plotly object","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_plotlypep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot chlorophyll and secchi data together with matrix outcomes — show_plotlypep","text":"","code":"show_plotlypep(rawdat) #> Warning: `gather_()` was deprecated in tidyr 1.2.0. #> ℹ Please use `gather()` instead. #> ℹ The deprecated feature was likely used in the plotly package. #>   Please report the issue at <https://github.com/plotly/plotly.R/issues>.  {\"x\":{\"data\":[{\"x\":[1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021],\"y\":[4,4.725,3.8,3.625,3.4,6.31666666666667,7.375,7.95333333333333,3.9,3.7,2.725,3.4736,3.2318,5.694,4.5552,4.4928,5.538,4.4954,5.2598,5.7304,8.5202,4.628,4.8594,5.5994,3.21,2.8,4.12,5.29,4.82,5.44,4.635,9.35],\"text\":[\"yr: 1990<br />medv: 4.000000<br />colour: Annual Median\",\"yr: 1991<br />medv: 4.725000<br />colour: Annual Median\",\"yr: 1992<br />medv: 3.800000<br />colour: Annual Median\",\"yr: 1993<br />medv: 3.625000<br />colour: Annual Median\",\"yr: 1994<br />medv: 3.400000<br />colour: Annual Median\",\"yr: 1995<br />medv: 6.316667<br />colour: Annual Median\",\"yr: 1996<br />medv: 7.375000<br />colour: Annual Median\",\"yr: 1997<br />medv: 7.953333<br />colour: Annual Median\",\"yr: 1998<br />medv: 3.900000<br />colour: Annual Median\",\"yr: 1999<br />medv: 3.700000<br />colour: Annual Median\",\"yr: 2000<br />medv: 2.725000<br />colour: Annual Median\",\"yr: 2001<br />medv: 3.473600<br />colour: Annual Median\",\"yr: 2002<br />medv: 3.231800<br />colour: Annual Median\",\"yr: 2003<br />medv: 5.694000<br />colour: Annual Median\",\"yr: 2004<br />medv: 4.555200<br />colour: Annual Median\",\"yr: 2005<br />medv: 4.492800<br />colour: Annual Median\",\"yr: 2006<br />medv: 5.538000<br />colour: Annual Median\",\"yr: 2007<br />medv: 4.495400<br />colour: Annual Median\",\"yr: 2008<br />medv: 5.259800<br />colour: Annual Median\",\"yr: 2009<br />medv: 5.730400<br />colour: Annual Median\",\"yr: 2010<br />medv: 8.520200<br />colour: Annual Median\",\"yr: 2011<br />medv: 4.628000<br />colour: Annual Median\",\"yr: 2012<br />medv: 4.859400<br />colour: Annual Median\",\"yr: 2013<br />medv: 5.599400<br />colour: Annual Median\",\"yr: 2014<br />medv: 3.210000<br />colour: Annual Median\",\"yr: 2015<br />medv: 2.800000<br />colour: Annual Median\",\"yr: 2016<br />medv: 4.120000<br />colour: Annual Median\",\"yr: 2017<br />medv: 5.290000<br />colour: Annual Median\",\"yr: 2018<br />medv: 4.820000<br />colour: Annual Median\",\"yr: 2019<br />medv: 5.440000<br />colour: Annual Median\",\"yr: 2020<br />medv: 4.635000<br />colour: Annual Median\",\"yr: 2021<br />medv: 9.350000<br />colour: Annual Median\"],\"type\":\"scatter\",\"mode\":\"markers+lines\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,0,0,1)\",\"opacity\":1,\"size\":11.3385826771654,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,0,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Annual Median\",\"legendgroup\":\"Annual Median\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"line\":{\"width\":2.83464566929134,\"color\":\"rgba(255,0,0,1)\",\"dash\":\"solid\"},\"frame\":null},{\"x\":[1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021],\"y\":[4,4.65,3.7,3.65,3.25,6.425,7.26666666666667,8.055,3.875,3.875,2.87,3.3566,3.4144,5.3872,4.919,4.602,5.3326,4.94,6.5416,5.6108,8.216,4.7138,5.0466,5.76,3.145,2.905,4.14,5.31,4.945,5.77,4.74,9.205],\"text\":[\"yr: 1990<br />lwr.ci: 3.200000<br />upr.ci:  4.8000<br />colour: Annual Median\",\"yr: 1991<br />lwr.ci: 3.600000<br />upr.ci:  5.7000<br />colour: Annual Median\",\"yr: 1992<br />lwr.ci: 3.200000<br />upr.ci:  4.2000<br />colour: Annual Median\",\"yr: 1993<br />lwr.ci: 3.300000<br />upr.ci:  4.0000<br />colour: Annual Median\",\"yr: 1994<br />lwr.ci: 2.800000<br />upr.ci:  3.7000<br />colour: Annual Median\",\"yr: 1995<br />lwr.ci: 5.300000<br />upr.ci:  7.5500<br />colour: Annual Median\",\"yr: 1996<br />lwr.ci: 6.333333<br />upr.ci:  8.2000<br />colour: Annual Median\",\"yr: 1997<br />lwr.ci: 6.900000<br />upr.ci:  9.2100<br />colour: Annual Median\",\"yr: 1998<br />lwr.ci: 3.200000<br />upr.ci:  4.5500<br />colour: Annual Median\",\"yr: 1999<br />lwr.ci: 3.150000<br />upr.ci:  4.6000<br />colour: Annual Median\",\"yr: 2000<br />lwr.ci: 2.030000<br />upr.ci:  3.7100<br />colour: Annual Median\",\"yr: 2001<br />lwr.ci: 2.808000<br />upr.ci:  3.9052<br />colour: Annual Median\",\"yr: 2002<br />lwr.ci: 2.949600<br />upr.ci:  3.8792<br />colour: Annual Median\",\"yr: 2003<br />lwr.ci: 3.712800<br />upr.ci:  7.0616<br />colour: Annual Median\",\"yr: 2004<br />lwr.ci: 3.192400<br />upr.ci:  6.6456<br />colour: Annual Median\",\"yr: 2005<br />lwr.ci: 3.764800<br />upr.ci:  5.4392<br />colour: Annual Median\",\"yr: 2006<br />lwr.ci: 4.222400<br />upr.ci:  6.4428<br />colour: Annual Median\",\"yr: 2007<br />lwr.ci: 3.806400<br />upr.ci:  6.0736<br />colour: Annual Median\",\"yr: 2008<br />lwr.ci: 3.837600<br />upr.ci:  9.2456<br />colour: Annual Median\",\"yr: 2009<br />lwr.ci: 4.040400<br />upr.ci:  7.1812<br />colour: Annual Median\",\"yr: 2010<br />lwr.ci: 5.730400<br />upr.ci: 10.7016<br />colour: Annual Median\",\"yr: 2011<br />lwr.ci: 3.416400<br />upr.ci:  6.0112<br />colour: Annual Median\",\"yr: 2012<br />lwr.ci: 3.775200<br />upr.ci:  6.3180<br />colour: Annual Median\",\"yr: 2013<br />lwr.ci: 4.630000<br />upr.ci:  6.8900<br />colour: Annual Median\",\"yr: 2014<br />lwr.ci: 2.410000<br />upr.ci:  3.8800<br />colour: Annual Median\",\"yr: 2015<br />lwr.ci: 2.270000<br />upr.ci:  3.5400<br />colour: Annual Median\",\"yr: 2016<br />lwr.ci: 3.140000<br />upr.ci:  5.1400<br />colour: Annual Median\",\"yr: 2017<br />lwr.ci: 3.580000<br />upr.ci:  7.0400<br />colour: Annual Median\",\"yr: 2018<br />lwr.ci: 3.890000<br />upr.ci:  6.0000<br />colour: Annual Median\",\"yr: 2019<br />lwr.ci: 3.500000<br />upr.ci:  8.0400<br />colour: Annual Median\",\"yr: 2020<br />lwr.ci: 3.720000<br />upr.ci:  5.7600<br />colour: Annual Median\",\"yr: 2021<br />lwr.ci: 7.070000<br />upr.ci: 11.3400<br />colour: Annual Median\"],\"type\":\"scatter\",\"mode\":\"lines\",\"opacity\":1,\"line\":{\"color\":\"transparent\"},\"error_y\":{\"array\":[0.8,1.05,0.5,0.35,0.45,1.125,0.933333333333334,1.155,0.675,0.725,0.84,0.5486,0.4648,1.6744,1.7266,0.837199999999999,1.1102,1.1336,2.704,1.5704,2.4856,1.2974,1.2714,1.13,0.735,0.635,1,1.73,1.055,2.27,1.02,2.135],\"arrayminus\":[0.8,1.05,0.5,0.35,0.45,1.125,0.933333333333333,1.155,0.675,0.725,0.84,0.5486,0.4648,1.6744,1.7266,0.8372,1.1102,1.1336,2.704,1.5704,2.4856,1.2974,1.2714,1.13,0.735,0.635,1,1.73,1.055,2.27,1.02,2.135],\"type\":\"data\",\"width\":2.48833592534992,\"symmetric\":false,\"color\":\"rgba(255,0,0,1)\"},\"name\":\"Annual Median\",\"legendgroup\":\"Annual Median\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1989.425,2021.575],\"y\":[5.5,5.5],\"text\":\"thrnum: 5.5<br />colour: Threshold\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":2.83464566929134,\"color\":\"rgba(0,0,255,1)\",\"dash\":\"dot\"},\"hoveron\":\"points\",\"name\":\"Threshold\",\"legendgroup\":\"Threshold\",\"showlegend\":true,\"xaxis\":\"x\",\"yaxis\":\"y\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1991.5,1992.5,1992.5,1991.5,1991.5,null,1989.5,1990.5,1990.5,1989.5,1989.5],\"y\":[2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5],\"text\":\"Result: 0, Exceedance: none (size), NA (length)\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":0.377952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(0,255,0,1)\",\"hoveron\":\"fills\",\"name\":\"green\",\"legendgroup\":\"green\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2001.5,2002.5,2002.5,2001.5,2001.5,null,2000.5,2001.5,2001.5,2000.5,2000.5],\"y\":[2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5],\"text\":\"Result: 0, Exceedance: none (size), none (length)\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":0.377952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(0,255,0,1)\",\"hoveron\":\"fills\",\"name\":\"green\",\"legendgroup\":\"green\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2015.5,2016.5,2016.5,2015.5,2015.5,null,2014.5,2015.5,2015.5,2014.5,2014.5,null,2013.5,2014.5,2014.5,2013.5,2013.5,null,2004.5,2005.5,2005.5,2004.5,2004.5,null,1999.5,2000.5,2000.5,1999.5,1999.5,null,1998.5,1999.5,1999.5,1998.5,1998.5,null,1997.5,1998.5,1998.5,1997.5,1997.5,null,1993.5,1994.5,1994.5,1993.5,1993.5,null,1992.5,1993.5,1993.5,1992.5,1992.5,null,2013.5,2014.5,2014.5,2013.5,2013.5],\"y\":[2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5,null,0.5,0.5,1.5,1.5,0.5],\"text\":\"Result: 0, Exceedance: none (size), short (length)\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":0.377952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(0,255,0,1)\",\"hoveron\":\"fills\",\"name\":\"green\",\"legendgroup\":\"green\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2018.5,2019.5,2019.5,2018.5,2018.5,null,2017.5,2018.5,2018.5,2017.5,2017.5,null,2016.5,2017.5,2017.5,2016.5,2016.5,null,2007.5,2008.5,2008.5,2007.5,2007.5,null,2006.5,2007.5,2007.5,2006.5,2006.5,null,2003.5,2004.5,2004.5,2003.5,2003.5],\"y\":[2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5],\"text\":\"Result: 1, Exceedance: small (size), short (length)\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":0.377952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(0,255,0,1)\",\"hoveron\":\"fills\",\"name\":\"green\",\"legendgroup\":\"green\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1990.5,1991.5,1991.5,1990.5,1990.5],\"y\":[2.5,2.5,3.5,3.5,2.5],\"text\":\"Result: 2, Exceedance: small (size), NA (length)\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":0.377952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(0,255,0,1)\",\"hoveron\":\"fills\",\"name\":\"green\",\"legendgroup\":\"green\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2019.5,2020.5,2020.5,2019.5,2019.5,null,2011.5,2012.5,2012.5,2011.5,2011.5,null,2010.5,2011.5,2011.5,2010.5,2010.5,null,2019.5,2020.5,2020.5,2019.5,2019.5,null,2012.5,2013.5,2013.5,2012.5,2012.5,null,2005.5,2006.5,2006.5,2005.5,2005.5,null,2001.5,2002.5,2002.5,2001.5,2001.5],\"y\":[2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5],\"text\":\"Result: 2, Exceedance: small (size), long (length)\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":0.377952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(0,255,0,1)\",\"hoveron\":\"fills\",\"name\":\"green\",\"legendgroup\":\"green\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2013.5,2014.5,2014.5,2013.5,2013.5],\"y\":[1.5,1.5,2.5,2.5,1.5],\"text\":\"Result: Stay the Course (chla: 0, sd: 0)\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":0.377952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(0,255,0,1)\",\"hoveron\":\"fills\",\"name\":\"green\",\"legendgroup\":\"green\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2005.5,2006.5,2006.5,2005.5,2005.5,null,2002.5,2003.5,2003.5,2002.5,2002.5,null,1994.5,1995.5,1995.5,1994.5,1994.5,null,2014.5,2015.5,2015.5,2014.5,2014.5],\"y\":[2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5,null,0.5,0.5,1.5,1.5,0.5],\"text\":\"Result: 1, Exceedance: small (size), short (length)\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":0.377952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(255,0,0,1)\",\"hoveron\":\"fills\",\"name\":\"red\",\"legendgroup\":\"red\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1996.5,1997.5,1997.5,1996.5,1996.5,null,1995.5,1996.5,1996.5,1995.5,1995.5,null,2016.5,2017.5,2017.5,2016.5,2016.5,null,2015.5,2016.5,2016.5,2015.5,2015.5],\"y\":[2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5],\"text\":\"Result: 2, Exceedance: large (size), short (length)\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":0.377952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(255,0,0,1)\",\"hoveron\":\"fills\",\"name\":\"red\",\"legendgroup\":\"red\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2012.5,2013.5,2013.5,2012.5,2012.5,null,2008.5,2009.5,2009.5,2008.5,2008.5,null,2020.5,2021.5,2021.5,2020.5,2020.5,null,2006.5,2007.5,2007.5,2006.5,2006.5,null,2000.5,2001.5,2001.5,2000.5,2000.5],\"y\":[2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5],\"text\":\"Result: 2, Exceedance: small (size), long (length)\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":0.377952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(255,0,0,1)\",\"hoveron\":\"fills\",\"name\":\"red\",\"legendgroup\":\"red\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1991.5,1992.5,1992.5,1991.5,1991.5,null,1990.5,1991.5,1991.5,1990.5,1990.5,null,1989.5,1990.5,1990.5,1989.5,1989.5],\"y\":[0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5],\"text\":\"Result: 3, Exceedance: large (size), NA (length)\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":0.377952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(255,0,0,1)\",\"hoveron\":\"fills\",\"name\":\"red\",\"legendgroup\":\"red\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2020.5,2021.5,2021.5,2020.5,2020.5,null,2009.5,2010.5,2010.5,2009.5,2009.5,null,2018.5,2019.5,2019.5,2018.5,2018.5,null,2017.5,2018.5,2018.5,2017.5,2017.5,null,2011.5,2012.5,2012.5,2011.5,2011.5,null,2010.5,2011.5,2011.5,2010.5,2010.5,null,2009.5,2010.5,2010.5,2009.5,2009.5,null,2008.5,2009.5,2009.5,2008.5,2008.5,null,2007.5,2008.5,2008.5,2007.5,2007.5,null,2004.5,2005.5,2005.5,2004.5,2004.5,null,2003.5,2004.5,2004.5,2003.5,2003.5,null,2002.5,2003.5,2003.5,2002.5,2002.5,null,1999.5,2000.5,2000.5,1999.5,1999.5,null,1998.5,1999.5,1999.5,1998.5,1998.5,null,1997.5,1998.5,1998.5,1997.5,1997.5,null,1996.5,1997.5,1997.5,1996.5,1996.5,null,1995.5,1996.5,1996.5,1995.5,1995.5,null,1994.5,1995.5,1995.5,1994.5,1994.5,null,1993.5,1994.5,1994.5,1993.5,1993.5,null,1992.5,1993.5,1993.5,1992.5,1992.5],\"y\":[2.5,2.5,3.5,3.5,2.5,null,2.5,2.5,3.5,3.5,2.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5,null,0.5,0.5,1.5,1.5,0.5],\"text\":\"Result: 3, Exceedance: large (size), long (length)\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":0.377952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(255,0,0,1)\",\"hoveron\":\"fills\",\"name\":\"red\",\"legendgroup\":\"red\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2018.5,2019.5,2019.5,2018.5,2018.5,null,2017.5,2018.5,2018.5,2017.5,2017.5,null,2007.5,2008.5,2008.5,2007.5,2007.5,null,2003.5,2004.5,2004.5,2003.5,2003.5,null,2002.5,2003.5,2003.5,2002.5,2002.5,null,1994.5,1995.5,1995.5,1994.5,1994.5],\"y\":[1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5],\"text\":\"Result: On Alert (chla: 1, sd: 3)\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":0.377952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(255,0,0,1)\",\"hoveron\":\"fills\",\"name\":\"red\",\"legendgroup\":\"red\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2019.5,2020.5,2020.5,2019.5,2019.5,null,2012.5,2013.5,2013.5,2012.5,2012.5],\"y\":[1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5],\"text\":\"Result: On Alert (chla: 2, sd: 2)\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":0.377952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(255,0,0,1)\",\"hoveron\":\"fills\",\"name\":\"red\",\"legendgroup\":\"red\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2011.5,2012.5,2012.5,2011.5,2011.5,null,2010.5,2011.5,2011.5,2010.5,2010.5,null,2008.5,2009.5,2009.5,2008.5,2008.5,null,1996.5,1997.5,1997.5,1996.5,1996.5,null,1995.5,1996.5,1996.5,1995.5,1995.5,null,1990.5,1991.5,1991.5,1990.5,1990.5],\"y\":[1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5],\"text\":\"Result: On Alert (chla: 2, sd: 3)\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":0.377952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(255,0,0,1)\",\"hoveron\":\"fills\",\"name\":\"red\",\"legendgroup\":\"red\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2020.5,2021.5,2021.5,2020.5,2020.5],\"y\":[1.5,1.5,2.5,2.5,1.5],\"text\":\"Result: On Alert (chla: 3, sd: 2)\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":0.377952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(255,0,0,1)\",\"hoveron\":\"fills\",\"name\":\"red\",\"legendgroup\":\"red\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2009.5,2010.5,2010.5,2009.5,2009.5],\"y\":[1.5,1.5,2.5,2.5,1.5],\"text\":\"Result: On Alert (chla: 3, sd: 3)\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":0.377952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(255,0,0,1)\",\"hoveron\":\"fills\",\"name\":\"red\",\"legendgroup\":\"red\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2014.5,2015.5,2015.5,2014.5,2014.5],\"y\":[1.5,1.5,2.5,2.5,1.5],\"text\":\"Result: Caution (chla: 0, sd: 1)\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":0.377952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(255,255,0,1)\",\"hoveron\":\"fills\",\"name\":\"yellow\",\"legendgroup\":\"yellow\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2015.5,2016.5,2016.5,2015.5,2015.5,null,2001.5,2002.5,2002.5,2001.5,2001.5,null,2000.5,2001.5,2001.5,2000.5,2000.5],\"y\":[1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5],\"text\":\"Result: Caution (chla: 0, sd: 2)\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":0.377952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(255,255,0,1)\",\"hoveron\":\"fills\",\"name\":\"yellow\",\"legendgroup\":\"yellow\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2004.5,2005.5,2005.5,2004.5,2004.5,null,1999.5,2000.5,2000.5,1999.5,1999.5,null,1998.5,1999.5,1999.5,1998.5,1998.5,null,1997.5,1998.5,1998.5,1997.5,1997.5,null,1993.5,1994.5,1994.5,1993.5,1993.5,null,1992.5,1993.5,1993.5,1992.5,1992.5,null,1991.5,1992.5,1992.5,1991.5,1991.5,null,1989.5,1990.5,1990.5,1989.5,1989.5],\"y\":[1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5],\"text\":\"Result: Caution (chla: 0, sd: 3)\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":0.377952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(255,255,0,1)\",\"hoveron\":\"fills\",\"name\":\"yellow\",\"legendgroup\":\"yellow\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[2016.5,2017.5,2017.5,2016.5,2016.5,null,2006.5,2007.5,2007.5,2006.5,2006.5,null,2005.5,2006.5,2006.5,2005.5,2005.5],\"y\":[1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5,null,1.5,1.5,2.5,2.5,1.5],\"text\":\"Result: Caution (chla: 1, sd: 2)\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":0.377952755905512,\"color\":\"rgba(0,0,0,1)\",\"dash\":\"solid\"},\"fill\":\"toself\",\"fillcolor\":\"rgba(255,255,0,1)\",\"hoveron\":\"fills\",\"name\":\"yellow\",\"legendgroup\":\"yellow\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y2\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021],\"y\":[5.75,4.5,4.625,5,6,5.5,5.75,5.5,6,6,5.25,5.5,6.5,5,5.5,5.75,6.5,6,5.5,5.5,5.5,5.5,5,7,10,6,4.5,4.5,5,6,7,6],\"text\":[\"yr: 1990<br />medv:  5.750<br />colour: Annual Median\",\"yr: 1991<br />medv:  4.500<br />colour: Annual Median\",\"yr: 1992<br />medv:  4.625<br />colour: Annual Median\",\"yr: 1993<br />medv:  5.000<br />colour: Annual Median\",\"yr: 1994<br />medv:  6.000<br />colour: Annual Median\",\"yr: 1995<br />medv:  5.500<br />colour: Annual Median\",\"yr: 1996<br />medv:  5.750<br />colour: Annual Median\",\"yr: 1997<br />medv:  5.500<br />colour: Annual Median\",\"yr: 1998<br />medv:  6.000<br />colour: Annual Median\",\"yr: 1999<br />medv:  6.000<br />colour: Annual Median\",\"yr: 2000<br />medv:  5.250<br />colour: Annual Median\",\"yr: 2001<br />medv:  5.500<br />colour: Annual Median\",\"yr: 2002<br />medv:  6.500<br />colour: Annual Median\",\"yr: 2003<br />medv:  5.000<br />colour: Annual Median\",\"yr: 2004<br />medv:  5.500<br />colour: Annual Median\",\"yr: 2005<br />medv:  5.750<br />colour: Annual Median\",\"yr: 2006<br />medv:  6.500<br />colour: Annual Median\",\"yr: 2007<br />medv:  6.000<br />colour: Annual Median\",\"yr: 2008<br />medv:  5.500<br />colour: Annual Median\",\"yr: 2009<br />medv:  5.500<br />colour: Annual Median\",\"yr: 2010<br />medv:  5.500<br />colour: Annual Median\",\"yr: 2011<br />medv:  5.500<br />colour: Annual Median\",\"yr: 2012<br />medv:  5.000<br />colour: Annual Median\",\"yr: 2013<br />medv:  7.000<br />colour: Annual Median\",\"yr: 2014<br />medv: 10.000<br />colour: Annual Median\",\"yr: 2015<br />medv:  6.000<br />colour: Annual Median\",\"yr: 2016<br />medv:  4.500<br />colour: Annual Median\",\"yr: 2017<br />medv:  4.500<br />colour: Annual Median\",\"yr: 2018<br />medv:  5.000<br />colour: Annual Median\",\"yr: 2019<br />medv:  6.000<br />colour: Annual Median\",\"yr: 2020<br />medv:  7.000<br />colour: Annual Median\",\"yr: 2021<br />medv:  6.000<br />colour: Annual Median\"],\"type\":\"scatter\",\"mode\":\"markers+lines\",\"marker\":{\"autocolorscale\":false,\"color\":\"rgba(255,0,0,1)\",\"opacity\":1,\"size\":11.3385826771654,\"symbol\":\"circle\",\"line\":{\"width\":1.88976377952756,\"color\":\"rgba(255,0,0,1)\"}},\"hoveron\":\"points\",\"name\":\"Annual Median\",\"legendgroup\":\"Annual Median\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y3\",\"hoverinfo\":\"text\",\"line\":{\"width\":2.83464566929134,\"color\":\"rgba(255,0,0,1)\",\"dash\":\"solid\"},\"frame\":null},{\"x\":[1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021],\"y\":[5.75,4.75,4.5,4.875,6,5.5,5.75,5.625,6,6,5.5,6,7,4.875,5.75,5.625,6.75,6.125,5.5,5.5,5.5,5.625,5.25,7,10,6.25,4.5,4.5,5,5.75,7.25,6],\"text\":[\"yr: 1990<br />lwr.ci: 5.00<br />upr.ci:  6.50<br />colour: Annual Median\",\"yr: 1991<br />lwr.ci: 4.00<br />upr.ci:  5.50<br />colour: Annual Median\",\"yr: 1992<br />lwr.ci: 4.00<br />upr.ci:  5.00<br />colour: Annual Median\",\"yr: 1993<br />lwr.ci: 4.75<br />upr.ci:  5.00<br />colour: Annual Median\",\"yr: 1994<br />lwr.ci: 5.50<br />upr.ci:  6.50<br />colour: Annual Median\",\"yr: 1995<br />lwr.ci: 5.00<br />upr.ci:  6.00<br />colour: Annual Median\",\"yr: 1996<br />lwr.ci: 5.50<br />upr.ci:  6.00<br />colour: Annual Median\",\"yr: 1997<br />lwr.ci: 5.25<br />upr.ci:  6.00<br />colour: Annual Median\",\"yr: 1998<br />lwr.ci: 5.50<br />upr.ci:  6.50<br />colour: Annual Median\",\"yr: 1999<br />lwr.ci: 5.50<br />upr.ci:  6.50<br />colour: Annual Median\",\"yr: 2000<br />lwr.ci: 5.00<br />upr.ci:  6.00<br />colour: Annual Median\",\"yr: 2001<br />lwr.ci: 5.00<br />upr.ci:  7.00<br />colour: Annual Median\",\"yr: 2002<br />lwr.ci: 6.00<br />upr.ci:  8.00<br />colour: Annual Median\",\"yr: 2003<br />lwr.ci: 4.25<br />upr.ci:  5.50<br />colour: Annual Median\",\"yr: 2004<br />lwr.ci: 5.00<br />upr.ci:  6.50<br />colour: Annual Median\",\"yr: 2005<br />lwr.ci: 5.00<br />upr.ci:  6.25<br />colour: Annual Median\",\"yr: 2006<br />lwr.ci: 6.00<br />upr.ci:  7.50<br />colour: Annual Median\",\"yr: 2007<br />lwr.ci: 5.25<br />upr.ci:  7.00<br />colour: Annual Median\",\"yr: 2008<br />lwr.ci: 5.00<br />upr.ci:  6.00<br />colour: Annual Median\",\"yr: 2009<br />lwr.ci: 5.00<br />upr.ci:  6.00<br />colour: Annual Median\",\"yr: 2010<br />lwr.ci: 5.00<br />upr.ci:  6.00<br />colour: Annual Median\",\"yr: 2011<br />lwr.ci: 5.25<br />upr.ci:  6.00<br />colour: Annual Median\",\"yr: 2012<br />lwr.ci: 5.00<br />upr.ci:  5.50<br />colour: Annual Median\",\"yr: 2013<br />lwr.ci: 6.00<br />upr.ci:  8.00<br />colour: Annual Median\",\"yr: 2014<br />lwr.ci: 7.00<br />upr.ci: 13.00<br />colour: Annual Median\",\"yr: 2015<br />lwr.ci: 5.50<br />upr.ci:  7.00<br />colour: Annual Median\",\"yr: 2016<br />lwr.ci: 4.00<br />upr.ci:  5.00<br />colour: Annual Median\",\"yr: 2017<br />lwr.ci: 4.00<br />upr.ci:  5.00<br />colour: Annual Median\",\"yr: 2018<br />lwr.ci: 4.50<br />upr.ci:  5.50<br />colour: Annual Median\",\"yr: 2019<br />lwr.ci: 5.00<br />upr.ci:  6.50<br />colour: Annual Median\",\"yr: 2020<br />lwr.ci: 6.00<br />upr.ci:  8.50<br />colour: Annual Median\",\"yr: 2021<br />lwr.ci: 5.00<br />upr.ci:  7.00<br />colour: Annual Median\"],\"type\":\"scatter\",\"mode\":\"lines\",\"opacity\":1,\"line\":{\"color\":\"transparent\"},\"error_y\":{\"array\":[0.75,0.75,0.5,0.125,0.5,0.5,0.25,0.375,0.5,0.5,0.5,1,1,0.625,0.75,0.625,0.75,0.875,0.5,0.5,0.5,0.375,0.25,1,3,0.75,0.5,0.5,0.5,0.75,1.25,1],\"arrayminus\":[0.75,0.75,0.5,0.125,0.5,0.5,0.25,0.375,0.5,0.5,0.5,1,1,0.625,0.75,0.625,0.75,0.875,0.5,0.5,0.5,0.375,0.25,1,3,0.75,0.5,0.5,0.5,0.75,1.25,1],\"type\":\"data\",\"width\":2.48833592534992,\"symmetric\":false,\"color\":\"rgba(255,0,0,1)\"},\"name\":\"Annual Median\",\"legendgroup\":\"Annual Median\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y3\",\"hoverinfo\":\"text\",\"frame\":null},{\"x\":[1989.425,2021.575],\"y\":[6.5,6.5],\"text\":\"thrnum: 6.5<br />colour: Threshold\",\"type\":\"scatter\",\"mode\":\"lines\",\"line\":{\"width\":2.83464566929134,\"color\":\"rgba(0,0,255,1)\",\"dash\":\"dot\"},\"hoveron\":\"points\",\"name\":\"Threshold\",\"legendgroup\":\"Threshold\",\"showlegend\":false,\"xaxis\":\"x\",\"yaxis\":\"y3\",\"hoverinfo\":\"text\",\"frame\":null}],\"layout\":{\"xaxis\":{\"domain\":[0,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[1989.425,2021.575],\"tickmode\":\"array\",\"ticktext\":[\"1990\",\"1991\",\"1992\",\"1993\",\"1994\",\"1995\",\"1996\",\"1997\",\"1998\",\"1999\",\"2000\",\"2001\",\"2002\",\"2003\",\"2004\",\"2005\",\"2006\",\"2007\",\"2008\",\"2009\",\"2010\",\"2011\",\"2012\",\"2013\",\"2014\",\"2015\",\"2016\",\"2017\",\"2018\",\"2019\",\"2020\",\"2021\"],\"tickvals\":[1990,1991,1992,1993,1994,1995,1996,1997,1998,1999,2000,2001,2002,2003,2004,2005,2006,2007,2008,2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2020,2021],\"categoryorder\":\"array\",\"categoryarray\":[\"1990\",\"1991\",\"1992\",\"1993\",\"1994\",\"1995\",\"1996\",\"1997\",\"1998\",\"1999\",\"2000\",\"2001\",\"2002\",\"2003\",\"2004\",\"2005\",\"2006\",\"2007\",\"2008\",\"2009\",\"2010\",\"2011\",\"2012\",\"2013\",\"2014\",\"2015\",\"2016\",\"2017\",\"2018\",\"2019\",\"2020\",\"2021\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":9.29846409298464},\"tickangle\":-45,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"y3\",\"title\":{\"text\":\"\",\"font\":{\"color\":null,\"family\":null,\"size\":0}},\"hoverformat\":\".2f\"},\"yaxis3\":{\"domain\":[0,0.38],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[3.55,13.45],\"tickmode\":\"array\",\"ticktext\":[\"4\",\"6\",\"8\",\"10\",\"12\"],\"tickvals\":[4,6,8,10,12],\"categoryorder\":\"array\",\"categoryarray\":[\"4\",\"6\",\"8\",\"10\",\"12\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Median Secchi (ft)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"yaxis2\":{\"domain\":[0.42,0.58],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[0.5,3.5],\"tickmode\":\"array\",\"ticktext\":[\"Secchi\",\"Outcome\",\"Chlorophyll-a\"],\"tickvals\":[1,2,3],\"categoryorder\":\"array\",\"categoryarray\":[\"Secchi\",\"Outcome\",\"Chlorophyll-a\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":15.9402241594022},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":true,\"gridcolor\":\"rgba(235,235,235,1)\",\"gridwidth\":0.66417600664176,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"\",\"font\":{\"color\":null,\"family\":null,\"size\":0}},\"hoverformat\":\".2f\"},\"yaxis\":{\"domain\":[0.62,1],\"automargin\":true,\"type\":\"linear\",\"autorange\":false,\"range\":[1.5645,11.8055],\"tickmode\":\"array\",\"ticktext\":[\"3\",\"6\",\"9\"],\"tickvals\":[3,6,9],\"categoryorder\":\"array\",\"categoryarray\":[\"3\",\"6\",\"9\"],\"nticks\":null,\"ticks\":\"outside\",\"tickcolor\":\"rgba(51,51,51,1)\",\"ticklen\":3.65296803652968,\"tickwidth\":0.66417600664176,\"showticklabels\":true,\"tickfont\":{\"color\":\"rgba(77,77,77,1)\",\"family\":\"\",\"size\":11.689497716895},\"tickangle\":-0,\"showline\":false,\"linecolor\":null,\"linewidth\":0,\"showgrid\":false,\"gridcolor\":null,\"gridwidth\":0,\"zeroline\":false,\"anchor\":\"x\",\"title\":{\"text\":\"Median Chl-a (ug/L)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187}},\"hoverformat\":\".2f\"},\"annotations\":[],\"shapes\":[{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0.62,\"y1\":1},{\"type\":\"rect\",\"fillcolor\":\"transparent\",\"line\":{\"color\":\"rgba(51,51,51,1)\",\"width\":0.66417600664176,\"linetype\":\"solid\"},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0.42,\"y1\":0.58},{\"type\":\"rect\",\"fillcolor\":null,\"line\":{\"color\":null,\"width\":0,\"linetype\":[]},\"yref\":\"paper\",\"xref\":\"paper\",\"x0\":0,\"x1\":1,\"y0\":0,\"y1\":0.38}],\"images\":[],\"margin\":{\"t\":23.3059360730594,\"r\":7.30593607305936,\"b\":21.881397744462,\"l\":37.2602739726027},\"plot_bgcolor\":\"rgba(236,236,236,1)\",\"paper_bgcolor\":\"rgba(255,255,255,1)\",\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":14.6118721461187},\"showlegend\":true,\"legend\":{\"bgcolor\":\"transparent\",\"bordercolor\":\"transparent\",\"borderwidth\":1.88976377952756,\"font\":{\"color\":\"rgba(0,0,0,1)\",\"family\":\"\",\"size\":11.689497716895},\"title\":{\"text\":\"colour\",\"font\":{\"color\":null,\"family\":null,\"size\":0}}},\"hovermode\":\"closest\",\"barmode\":\"relative\"},\"attrs\":{\"4cff6d10257\":{\"x\":{},\"y\":{},\"colour\":{},\"type\":\"scatter\"},\"4cff31ea6508\":{\"x\":{},\"y\":{},\"colour\":{}},\"4cff2475d1df\":{\"x\":{},\"ymin\":{},\"ymax\":{},\"colour\":{}},\"4cff6bc0621b\":{\"yintercept\":{},\"colour\":{}},\"4cff49593d7\":{\"x\":{},\"y\":{},\"fill\":{},\"type\":\"scatter\"},\"4cff51a7bc4\":{\"x\":{},\"y\":{},\"colour\":{},\"type\":\"scatter\"},\"4cff14ba9a2c\":{\"x\":{},\"y\":{},\"colour\":{}},\"4cff2637bbd0\":{\"x\":{},\"ymin\":{},\"ymax\":{},\"colour\":{}},\"4cff501ab78f\":{\"yintercept\":{},\"colour\":{}}},\"source\":\"A\",\"config\":{\"doubleClick\":\"reset\",\"modeBarButtonsToAdd\":[\"hoverclosest\",\"hovercompare\"],\"showSendToCloud\":false},\"highlight\":{\"on\":\"plotly_click\",\"persistent\":false,\"dynamic\":false,\"selectize\":false,\"opacityDim\":0.2,\"selected\":{\"opacity\":1},\"debounce\":0},\"subplot\":true,\"shinyEvents\":[\"plotly_hover\",\"plotly_click\",\"plotly_selected\",\"plotly_relayout\",\"plotly_brushed\",\"plotly_brushing\",\"plotly_clickannotation\",\"plotly_doubleclick\",\"plotly_deselect\",\"plotly_afterplot\",\"plotly_sunburstclick\"],\"base_url\":\"https://plot.ly\"},\"evals\":[],\"jsHooks\":[]}"},{"path":"https://tbep-tech.github.io/peptools/reference/show_reactablepep.html","id":null,"dir":"Reference","previous_headings":"","what":"Create reactable table from matrix data — show_reactablepep","title":"Create reactable table from matrix data — show_reactablepep","text":"Create reactable table matrix data","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_reactablepep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create reactable table from matrix data — show_reactablepep","text":"","code":"show_reactablepep(totab, colfun, nrows = 10)"},{"path":"https://tbep-tech.github.io/peptools/reference/show_reactablepep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create reactable table from matrix data — show_reactablepep","text":"totab data frame wide format summarized results colfun Function specifying colors treated cell background nrows numeric specifying number rows table","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_reactablepep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create reactable table from matrix data — show_reactablepep","text":"reactable table","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_reactablepep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create reactable table from matrix data — show_reactablepep","text":"function used internally within show_matrixpep","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_segmatrixpep.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a colorized table for water quality outcomes and exceedances by segment — show_segmatrixpep","title":"Create a colorized table for water quality outcomes and exceedances by segment — show_segmatrixpep","text":"Create colorized table water quality outcomes segment includes management action chlorophyll, secchi exceedances","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_segmatrixpep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a colorized table for water quality outcomes and exceedances by segment — show_segmatrixpep","text":"","code":"show_segmatrixpep(   dat,   txtsz = 3,   trgs = NULL,   yrrng = NULL,   bay_segment = c(\"Western\", \"Central\", \"Eastern\"),   abbrev = FALSE,   family = NA )"},{"path":"https://tbep-tech.github.io/peptools/reference/show_segmatrixpep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a colorized table for water quality outcomes and exceedances by segment — show_segmatrixpep","text":"dat data.frame formatted read_pepwq txtsz numeric size text plot, applies tab = FALSE trgs optional data.frame annual bay segment water quality targets, defaults peptargets yrrng numeric vector indicating min, max years include bay_segment chr string bay segments include, one \"Western\", \"Central\", \"Eastern\" abbrev logical indicating text labels plot abbreviated first letter, applies center column family optional chr string indicating font family text labels","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_segmatrixpep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a colorized table for water quality outcomes and exceedances by segment — show_segmatrixpep","text":"static ggplot object returned","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_segmatrixpep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Create a colorized table for water quality outcomes and exceedances by segment — show_segmatrixpep","text":"function provides combined output show_wqmatrixpep show_matrixpep functions. one bay segment can plotted function call.","code":""},{"path":[]},{"path":"https://tbep-tech.github.io/peptools/reference/show_segmatrixpep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a colorized table for water quality outcomes and exceedances by segment — show_segmatrixpep","text":"","code":"show_segmatrixpep(rawdat, bay_segment = 'Western')"},{"path":"https://tbep-tech.github.io/peptools/reference/show_sitemappep.html","id":null,"dir":"Reference","previous_headings":"","what":"Map water quality data for a selected year — show_sitemappep","title":"Map water quality data for a selected year — show_sitemappep","text":"Map water quality data selected year","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_sitemappep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Map water quality data for a selected year — show_sitemappep","text":"","code":"show_sitemappep(   dat,   yrsel = NULL,   mosel = NULL,   param = c(\"chla\", \"sd\", \"tn\"),   bay_segment = c(\"Western\", \"Central\", \"Eastern\"),   maxrel = 0.99,   relative = FALSE )"},{"path":"https://tbep-tech.github.io/peptools/reference/show_sitemappep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Map water quality data for a selected year — show_sitemappep","text":"dat data frame data returned read_pepwq yrsel numeric years plot, see details mosel numeric months plot, see details param chr string indicating water quality value plot, one \"chla\" chlorophyll, \"sd\" secchi depth, \"tn\" total nitrogen bay_segment chr string bay segment, one \"Western\", \"Central\", \"Eastern\" maxrel numeric maximum quantile value scaling relative = T, prevents outliers skewing scale relative logical indicating sizes colors relative entire water quality data base, otherwise scaling relative points map","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_sitemappep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Map water quality data for a selected year — show_sitemappep","text":"leaflet object","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_sitemappep.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Map water quality data for a selected year — show_sitemappep","text":"Year estimates selected parameter based median observations across months. twelve months used mosel = NULL (default). Monthly estimates selected parameter based median observations across years.  years used yrsel = NULL (default). color ramp size scaling points reversed Secchi observations.","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_sitemappep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Map water quality data for a selected year — show_sitemappep","text":"","code":"# 2018, all months show_sitemappep(rawdat, yrsel = 2018)  {\"x\":{\"options\":{\"minZoom\":1,\"maxZoom\":52,\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"preferCanvas\":false,\"bounceAtZoomLimits\":false,\"maxBounds\":[[[-90,-370]],[[90,370]]]},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.Positron\",\"CartoDB.Positron\",\"CartoDB.Positron\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",\"OpenStreetMap\",\"OpenStreetMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",\"Esri.WorldImagery\",\"Esri.WorldImagery\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenTopoMap\",\"OpenTopoMap\",\"OpenTopoMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"createMapPane\",\"args\":[\"point\",440]},{\"method\":\"addCircleMarkers\",\"args\":[[40.924067,40.921667,40.92935,40.913883,40.938333,40.922783,40.943617,40.936383,40.900217,40.911667,41.00195,41.008883,40.975833,40.942783,40.955267,41.027717,41.052717,41.059117,40.9941,40.99625,41.05,41.076383,41.082217,41.013333,41.045283,41.063583,41.0055,41.00778,41.106267,41.077983,41.010367,41.0275,41.1144,41.081383,41.13445,41.02055,41.098017,41.025,41.010283,41.064167],[-72.63225,-72.61945,-72.6199,-72.615,-72.618617,-72.587217,-72.570833,-72.512217,-72.459083,-72.443617,-72.460283,-72.460283,-72.42945,-72.414717,-72.399483,-72.433367,-72.414,-72.414233,-72.367833,-72.349817,-72.376667,-72.40055,-72.4025,-72.34445,-72.347217,-72.359317,-72.3074,-72.2955,-72.354867,-72.311617,-72.252517,-72.26,-72.317483,-72.27305,-72.271383,-72.18195,-72.203667,-72.139167,-72.054167,-71.927783],-1,null,\"locs\",{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"pane\":\"point\",\"stroke\":true,\"color\":\"#333333\",\"weight\":1,\"opacity\":0,\"fill\":true,\"fillColor\":\"#6666FF\",\"fillOpacity\":0},null,null,null,{\"maxWidth\":800,\"minWidth\":50,\"autoPan\":true,\"keepInView\":false,\"closeButton\":true,\"closeOnClick\":true,\"className\":\"\"},null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":100,\"metric\":true,\"imperial\":true,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"CartoDB.DarkMatter\",\"OpenStreetMap\",\"Esri.WorldImagery\",\"OpenTopoMap\"],\"locs\",{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"addCircleMarkers\",\"args\":[[40.924067,40.921667,40.92935,40.913883,40.938333,40.922783,40.943617,40.936383,40.900217,40.911667,41.00195,41.008883,40.975833,40.942783,40.955267,41.027717,41.052717,41.059117,40.9941,40.99625,41.05,41.076383,41.082217,41.013333,41.045283,41.063583,41.0055,41.00778,41.106267,41.077983,41.010367,41.0275,41.1144,41.081383,41.13445,41.02055,41.098017,41.025,41.010283,41.064167],[-72.63225,-72.61945,-72.6199,-72.615,-72.618617,-72.587217,-72.570833,-72.512217,-72.459083,-72.443617,-72.460283,-72.460283,-72.42945,-72.414717,-72.399483,-72.433367,-72.414,-72.414233,-72.367833,-72.349817,-72.376667,-72.40055,-72.4025,-72.34445,-72.347217,-72.359317,-72.3074,-72.2955,-72.354867,-72.311617,-72.252517,-72.26,-72.317483,-72.27305,-72.271383,-72.18195,-72.203667,-72.139167,-72.054167,-71.927783],[12.0036866359447,9.4815668202765,9.77511520737327,8.85852534562212,17,9.01428571428572,8.42119815668203,4.99447004608295,5.88110599078341,5.71336405529954,7.01336405529954,8.07373271889401,6.04884792626728,5.49769585253456,6.26451612903226,4.38940092165899,7.60645161290323,9.30783410138249,4.94654377880184,5.97695852534562,5.95898617511521,4.95852534562212,6.45622119815668,5.71336405529954,5.28801843317972,5.99493087557604,5.18617511520737,5.41382488479263,5.47373271889401,4.93456221198157,4.45529953917051,4.44331797235023,5.82119815668203,4.14377880184332,5.8331797235023,4.25161290322581,4.65299539170507,4,4,4.50322580645161],null,null,{\"interactive\":true,\"className\":\"\",\"stroke\":true,\"color\":\"black\",\"weight\":1,\"opacity\":0.5,\"fill\":true,\"fillColor\":[\"#FED889\",\"#E8F6EC\",\"#EFF8DF\",\"#D2ECF4\",\"#A50026\",\"#D9EFF6\",\"#C1E3EF\",\"#4266AD\",\"#5B8EC1\",\"#5586BD\",\"#86BBD9\",\"#B2DCEB\",\"#6195C5\",\"#4D7DB8\",\"#699ECA\",\"#39499E\",\"#9FCFE4\",\"#E3F4F3\",\"#4164AC\",\"#5F92C3\",\"#5E91C3\",\"#4164AC\",\"#6FA7CE\",\"#5586BD\",\"#4574B4\",\"#5F92C4\",\"#446FB1\",\"#4A7AB7\",\"#4C7CB8\",\"#4163AB\",\"#3A4CA0\",\"#3A4BA0\",\"#598BC0\",\"#343D98\",\"#598BC0\",\"#36429B\",\"#3D56A5\",\"#313695\",\"#313695\",\"#3B4EA1\"],\"fillOpacity\":0.8},null,null,null,null,[\"Bay station  60250 ,  chl-a (ug/L)   7.86\",\"Bay station  60240 ,  chl-a (ug/L)   5.76\",\"Bay station  60230 ,  chl-a (ug/L)   6\",\"Bay station  60210 ,  chl-a (ug/L)   5.23\",\"Bay station  60220 ,  chl-a (ug/L)   12.03\",\"Bay station  60170 ,  chl-a (ug/L)   5.36\",\"Bay station  60101 ,  chl-a (ug/L)   4.87\",\"Bay station  60130 ,  chl-a (ug/L)   2.01\",\"Bay station  60290 ,  chl-a (ug/L)   2.75\",\"Bay station  60148 ,  chl-a (ug/L)   2.61\",\"Bay station  60102 ,  chl-a (ug/L)   3.69\",\"Bay station  60103 ,  chl-a (ug/L)   4.58\",\"Bay station  60113 ,  chl-a (ug/L)   2.89\",\"Bay station  60104 ,  chl-a (ug/L)   2.43\",\"Bay station  60300 ,  chl-a (ug/L)   3.07\",\"Bay station  60105 ,  chl-a (ug/L)   1.5\",\"Bay station  60106 ,  chl-a (ug/L)   4.19\",\"Bay station  60107 ,  chl-a (ug/L)   5.61\",\"Bay station  60310 ,  chl-a (ug/L)   1.97\",\"Bay station  60320 ,  chl-a (ug/L)   2.83\",\"Bay station  60114 ,  chl-a (ug/L)   2.82\",\"Bay station  60109 ,  chl-a (ug/L)   1.98\",\"Bay station  60340 ,  chl-a (ug/L)   3.23\",\"Bay station  60121 ,  chl-a (ug/L)   2.61\",\"Bay station  60124 ,  chl-a (ug/L)   2.26\",\"Bay station  60119 ,  chl-a (ug/L)   2.84\",\"Bay station  60127 ,  chl-a (ug/L)   2.17\",\"Bay station  60126 ,  chl-a (ug/L)   2.36\",\"Bay station  60111 ,  chl-a (ug/L)   2.41\",\"Bay station  60122 ,  chl-a (ug/L)   1.96\",\"Bay station  60131 ,  chl-a (ug/L)   1.56\",\"Bay station  60118 ,  chl-a (ug/L)   1.55\",\"Bay station  60115 ,  chl-a (ug/L)   2.7\",\"Bay station  60116 ,  chl-a (ug/L)   1.3\",\"Bay station  60330 ,  chl-a (ug/L)   2.71\",\"Bay station  60132 ,  chl-a (ug/L)   1.39\",\"Bay station  60137 ,  chl-a (ug/L)   1.73\",\"Bay station  60133 ,  chl-a (ug/L)   1.18\",\"Bay station  60134 ,  chl-a (ug/L)   1.18\",\"Bay station  60135 ,  chl-a (ug/L)   1.6\"],{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]},{\"method\":\"addLegend\",\"args\":[{\"colors\":[\"#313695 , #4266AC 7.55760368663595%, #95C7DF 25.9907834101383%, #EFF8DF 44.4239631336406%, #FFD282 62.8571428571429%, #F0663F 81.2903225806452%, #A60226 99.7235023041475%, #A50026 \"],\"labels\":[\"2\",\"4\",\"6\",\"8\",\"10\",\"12\"],\"na_color\":null,\"na_label\":\"NA\",\"opacity\":0.5,\"position\":\"bottomright\",\"type\":\"numeric\",\"title\":\"Median chl-a (ug/L)<\\/br>2018, Jan-Dec\",\"extra\":{\"p_1\":0.0755760368663595,\"p_n\":0.997235023041475},\"layerId\":null,\"className\":\"info legend\",\"group\":null}]}],\"limits\":{\"lat\":[40.900217,41.13445],\"lng\":[-72.63225,-71.927783]},\"fitBounds\":[40.900217,-72.63225,41.13445,-71.927783,[]]},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\n      function(el, x, data) {\\n      // get the leaflet map\\n      var map = this; //HTMLWidgets.find('#' + el.id);\\n      // we need a new div element because we have to handle\\n      // the mouseover output separately\\n      // debugger;\\n      function addElement () {\\n      // generate new div Element\\n      var newDiv = $(document.createElement('div'));\\n      // append at end of leaflet htmlwidget container\\n      $(el).append(newDiv);\\n      //provide ID and style\\n      newDiv.addClass('lnlt');\\n      newDiv.css({\\n      'position': 'relative',\\n      'bottomleft':  '0px',\\n      'background-color': 'rgba(255, 255, 255, 0.7)',\\n      'box-shadow': '0 0 2px #bbb',\\n      'background-clip': 'padding-box',\\n      'margin': '0',\\n      'padding-left': '5px',\\n      'color': '#333',\\n      'font': '9px/1.5 \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif',\\n      'z-index': '700',\\n      });\\n      return newDiv;\\n      }\\n\\n\\n      // check for already existing lnlt class to not duplicate\\n      var lnlt = $(el).find('.lnlt');\\n\\n      if(!lnlt.length) {\\n      lnlt = addElement();\\n\\n      // grab the special div we generated in the beginning\\n      // and put the mousmove output there\\n\\n      map.on('mousemove', function (e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                           ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                           ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                           ' | zoom: ' + map.getZoom() +\\n                           ' | x: ' + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\\n                           ' | y: ' + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\\n                           ' | epsg: 3857 ' +\\n                           ' | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs ');\\n      } else {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      }\\n      });\\n\\n      // remove the lnlt div when mouse leaves map\\n      map.on('mouseout', function (e) {\\n      var strip = document.querySelector('.lnlt');\\n      if( strip !==null) strip.remove();\\n      });\\n\\n      };\\n\\n      //$(el).keypress(67, function(e) {\\n      map.on('preclick', function(e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      var txt = document.querySelector('.lnlt').textContent;\\n      console.log(txt);\\n      //txt.innerText.focus();\\n      //txt.select();\\n      setClipboardText('\\\"' + txt + '\\\"');\\n      }\\n      });\\n\\n      }\\n      ).call(this.getMap(), el, x, data);\\n}\",\"data\":null},{\"code\":\"function(el, x, data) {\\n  return (function(el,x,data){\\n           var map = this;\\n\\n           map.on('keypress', function(e) {\\n               console.log(e.originalEvent.code);\\n               var key = e.originalEvent.code;\\n               if (key === 'KeyE') {\\n                   var bb = this.getBounds();\\n                   var txt = JSON.stringify(bb);\\n                   console.log(txt);\\n\\n                   setClipboardText('\\\\'' + txt + '\\\\'');\\n               }\\n           })\\n        }).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}} # 2018, July only show_sitemappep(rawdat, yrsel = 2018, mosel = 7)  {\"x\":{\"options\":{\"minZoom\":1,\"maxZoom\":52,\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"preferCanvas\":false,\"bounceAtZoomLimits\":false,\"maxBounds\":[[[-90,-370]],[[90,370]]]},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.Positron\",\"CartoDB.Positron\",\"CartoDB.Positron\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",\"OpenStreetMap\",\"OpenStreetMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",\"Esri.WorldImagery\",\"Esri.WorldImagery\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenTopoMap\",\"OpenTopoMap\",\"OpenTopoMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"createMapPane\",\"args\":[\"point\",440]},{\"method\":\"addCircleMarkers\",\"args\":[[40.924067,40.921667,40.92935,40.913883,40.938333,40.922783,40.943617,40.936383,40.900217,40.911667,41.00195,41.008883,40.975833,41.052717,41.059117,40.99625,41.05,41.076383,41.082217,41.013333,41.045283,41.063583,41.13445,41.02055,41.025,41.010283,41.064167],[-72.63225,-72.61945,-72.6199,-72.615,-72.618617,-72.587217,-72.570833,-72.512217,-72.459083,-72.443617,-72.460283,-72.460283,-72.42945,-72.414,-72.414233,-72.349817,-72.376667,-72.40055,-72.4025,-72.34445,-72.347217,-72.359317,-72.271383,-72.18195,-72.139167,-72.054167,-71.927783],-1,null,\"locs\",{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"pane\":\"point\",\"stroke\":true,\"color\":\"#333333\",\"weight\":1,\"opacity\":0,\"fill\":true,\"fillColor\":\"#6666FF\",\"fillOpacity\":0},null,null,null,{\"maxWidth\":800,\"minWidth\":50,\"autoPan\":true,\"keepInView\":false,\"closeButton\":true,\"closeOnClick\":true,\"className\":\"\"},null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":100,\"metric\":true,\"imperial\":true,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"CartoDB.DarkMatter\",\"OpenStreetMap\",\"Esri.WorldImagery\",\"OpenTopoMap\"],\"locs\",{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"addCircleMarkers\",\"args\":[[40.924067,40.921667,40.92935,40.913883,40.938333,40.922783,40.943617,40.936383,40.900217,40.911667,41.00195,41.008883,40.975833,41.052717,41.059117,40.99625,41.05,41.076383,41.082217,41.013333,41.045283,41.063583,41.13445,41.02055,41.025,41.010283,41.064167],[-72.63225,-72.61945,-72.6199,-72.615,-72.618617,-72.587217,-72.570833,-72.512217,-72.459083,-72.443617,-72.460283,-72.460283,-72.42945,-72.414,-72.414233,-72.349817,-72.376667,-72.40055,-72.4025,-72.34445,-72.347217,-72.359317,-72.271383,-72.18195,-72.139167,-72.054167,-71.927783],[11.2908567314615,9.24118070554356,11.6839452843772,10.8509719222462,17,8.98848092152628,7.10727141828654,6.04967602591793,6.81713462922966,4,8.16486681065515,8.81065514758819,7.01367890568755,7.5190784737221,9.16630669546436,10.49532037437,7.32253419726422,5.79697624190065,6.01223902087833,8.90424766018718,7.5939524838013,11.8617710583153,5.1792656587473,8.41756659467243,6.53635709143269,5.84377249820014,6.06839452843773],null,null,{\"interactive\":true,\"className\":\"\",\"stroke\":true,\"color\":\"black\",\"weight\":1,\"opacity\":0.5,\"fill\":true,\"fillColor\":[\"#FFECA2\",\"#E1F3F6\",\"#FEE394\",\"#FFF7B2\",\"#A50026\",\"#D8EFF6\",\"#8ABEDA\",\"#6195C5\",\"#7EB4D5\",\"#313695\",\"#B6DEEC\",\"#D0EBF4\",\"#86BBD9\",\"#9BCCE2\",\"#DFF2F8\",\"#FFFFBF\",\"#93C5DE\",\"#588ABF\",\"#6093C4\",\"#D4EDF5\",\"#9ECEE3\",\"#FEDE8E\",\"#446FB1\",\"#C0E3EF\",\"#72AAD0\",\"#5A8CC0\",\"#6296C5\"],\"fillOpacity\":0.8},null,null,null,null,[\"Bay station  60250 ,  chl-a (ug/L)   8.62\",\"Bay station  60240 ,  chl-a (ug/L)   6.43\",\"Bay station  60230 ,  chl-a (ug/L)   9.04\",\"Bay station  60210 ,  chl-a (ug/L)   8.15\",\"Bay station  60220 ,  chl-a (ug/L)   14.72\",\"Bay station  60170 ,  chl-a (ug/L)   6.16\",\"Bay station  60101 ,  chl-a (ug/L)   4.15\",\"Bay station  60130 ,  chl-a (ug/L)   3.02\",\"Bay station  60290 ,  chl-a (ug/L)   3.84\",\"Bay station  60148 ,  chl-a (ug/L)   0.83\",\"Bay station  60102 ,  chl-a (ug/L)   5.28\",\"Bay station  60103 ,  chl-a (ug/L)   5.97\",\"Bay station  60113 ,  chl-a (ug/L)   4.05\",\"Bay station  60106 ,  chl-a (ug/L)   4.59\",\"Bay station  60107 ,  chl-a (ug/L)   6.35\",\"Bay station  60320 ,  chl-a (ug/L)   7.77\",\"Bay station  60114 ,  chl-a (ug/L)   4.38\",\"Bay station  60109 ,  chl-a (ug/L)   2.75\",\"Bay station  60340 ,  chl-a (ug/L)   2.98\",\"Bay station  60121 ,  chl-a (ug/L)   6.07\",\"Bay station  60124 ,  chl-a (ug/L)   4.67\",\"Bay station  60119 ,  chl-a (ug/L)   9.23\",\"Bay station  60330 ,  chl-a (ug/L)   2.09\",\"Bay station  60132 ,  chl-a (ug/L)   5.55\",\"Bay station  60133 ,  chl-a (ug/L)   3.54\",\"Bay station  60134 ,  chl-a (ug/L)   2.8\",\"Bay station  60135 ,  chl-a (ug/L)   3.04\"],{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]},{\"method\":\"addLegend\",\"args\":[{\"colors\":[\"#313695 , #436BAF 8.42332613390929%, #84B9D8 22.8221742260619%, #D2ECF4 37.2210223182145%, #FFFAB7 51.6198704103672%, #FEC274 66.0187185025198%, #F36B42 80.4175665946724%, #BF1D27 94.816414686825%, #A50026 \"],\"labels\":[\"2\",\"4\",\"6\",\"8\",\"10\",\"12\",\"14\"],\"na_color\":null,\"na_label\":\"NA\",\"opacity\":0.5,\"position\":\"bottomright\",\"type\":\"numeric\",\"title\":\"Median chl-a (ug/L)<\\/br>2018, Jul\",\"extra\":{\"p_1\":0.0842332613390929,\"p_n\":0.94816414686825},\"layerId\":null,\"className\":\"info legend\",\"group\":null}]}],\"limits\":{\"lat\":[40.900217,41.13445],\"lng\":[-72.63225,-71.927783]},\"fitBounds\":[40.900217,-72.63225,41.13445,-71.927783,[]]},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\n      function(el, x, data) {\\n      // get the leaflet map\\n      var map = this; //HTMLWidgets.find('#' + el.id);\\n      // we need a new div element because we have to handle\\n      // the mouseover output separately\\n      // debugger;\\n      function addElement () {\\n      // generate new div Element\\n      var newDiv = $(document.createElement('div'));\\n      // append at end of leaflet htmlwidget container\\n      $(el).append(newDiv);\\n      //provide ID and style\\n      newDiv.addClass('lnlt');\\n      newDiv.css({\\n      'position': 'relative',\\n      'bottomleft':  '0px',\\n      'background-color': 'rgba(255, 255, 255, 0.7)',\\n      'box-shadow': '0 0 2px #bbb',\\n      'background-clip': 'padding-box',\\n      'margin': '0',\\n      'padding-left': '5px',\\n      'color': '#333',\\n      'font': '9px/1.5 \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif',\\n      'z-index': '700',\\n      });\\n      return newDiv;\\n      }\\n\\n\\n      // check for already existing lnlt class to not duplicate\\n      var lnlt = $(el).find('.lnlt');\\n\\n      if(!lnlt.length) {\\n      lnlt = addElement();\\n\\n      // grab the special div we generated in the beginning\\n      // and put the mousmove output there\\n\\n      map.on('mousemove', function (e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                           ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                           ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                           ' | zoom: ' + map.getZoom() +\\n                           ' | x: ' + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\\n                           ' | y: ' + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\\n                           ' | epsg: 3857 ' +\\n                           ' | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs ');\\n      } else {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      }\\n      });\\n\\n      // remove the lnlt div when mouse leaves map\\n      map.on('mouseout', function (e) {\\n      var strip = document.querySelector('.lnlt');\\n      if( strip !==null) strip.remove();\\n      });\\n\\n      };\\n\\n      //$(el).keypress(67, function(e) {\\n      map.on('preclick', function(e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      var txt = document.querySelector('.lnlt').textContent;\\n      console.log(txt);\\n      //txt.innerText.focus();\\n      //txt.select();\\n      setClipboardText('\\\"' + txt + '\\\"');\\n      }\\n      });\\n\\n      }\\n      ).call(this.getMap(), el, x, data);\\n}\",\"data\":null},{\"code\":\"function(el, x, data) {\\n  return (function(el,x,data){\\n           var map = this;\\n\\n           map.on('keypress', function(e) {\\n               console.log(e.originalEvent.code);\\n               var key = e.originalEvent.code;\\n               if (key === 'KeyE') {\\n                   var bb = this.getBounds();\\n                   var txt = JSON.stringify(bb);\\n                   console.log(txt);\\n\\n                   setClipboardText('\\\\'' + txt + '\\\\'');\\n               }\\n           })\\n        }).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}} # July only, all years show_sitemappep(rawdat, mosel = 7)  {\"x\":{\"options\":{\"minZoom\":1,\"maxZoom\":52,\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"preferCanvas\":false,\"bounceAtZoomLimits\":false,\"maxBounds\":[[[-90,-370]],[[90,370]]]},\"calls\":[{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.Positron\",\"CartoDB.Positron\",\"CartoDB.Positron\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",\"CartoDB.DarkMatter\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenStreetMap\",\"OpenStreetMap\",\"OpenStreetMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"Esri.WorldImagery\",\"Esri.WorldImagery\",\"Esri.WorldImagery\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"addProviderTiles\",\"args\":[\"OpenTopoMap\",\"OpenTopoMap\",\"OpenTopoMap\",{\"errorTileUrl\":\"\",\"noWrap\":false,\"detectRetina\":false,\"pane\":\"tilePane\"}]},{\"method\":\"createMapPane\",\"args\":[\"point\",440]},{\"method\":\"addCircleMarkers\",\"args\":[[40.924067,40.921667,40.92935,40.913883,40.938333,40.922783,40.943617,40.936383,40.900217,40.911667,41.00195,41.008883,40.975833,40.942783,40.955267,41.027717,41.052717,41.059117,40.9941,40.99625,41.05,41.076383,41.082217,41.013333,41.045283,41.063583,41.0055,41.00778,41.106267,41.077983,41.010367,41.0275,41.1144,41.081383,41.13445,41.02055,41.098017,41.025,41.010283,41.064167],[-72.63225,-72.61945,-72.6199,-72.615,-72.618617,-72.587217,-72.570833,-72.512217,-72.459083,-72.443617,-72.460283,-72.460283,-72.42945,-72.414717,-72.399483,-72.433367,-72.414,-72.414233,-72.367833,-72.349817,-72.376667,-72.40055,-72.4025,-72.34445,-72.347217,-72.359317,-72.3074,-72.2955,-72.354867,-72.311617,-72.252517,-72.26,-72.317483,-72.27305,-72.271383,-72.18195,-72.203667,-72.139167,-72.054167,-71.927783],-1,null,\"locs\",{\"crs\":{\"crsClass\":\"L.CRS.EPSG3857\",\"code\":null,\"proj4def\":null,\"projectedBounds\":null,\"options\":{}},\"pane\":\"point\",\"stroke\":true,\"color\":\"#333333\",\"weight\":1,\"opacity\":0,\"fill\":true,\"fillColor\":\"#6666FF\",\"fillOpacity\":0},null,null,null,{\"maxWidth\":800,\"minWidth\":50,\"autoPan\":true,\"keepInView\":false,\"closeButton\":true,\"closeOnClick\":true,\"className\":\"\"},null,{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]},{\"method\":\"addScaleBar\",\"args\":[{\"maxWidth\":100,\"metric\":true,\"imperial\":true,\"updateWhenIdle\":true,\"position\":\"bottomleft\"}]},{\"method\":\"addLayersControl\",\"args\":[[\"CartoDB.Positron\",\"CartoDB.DarkMatter\",\"OpenStreetMap\",\"Esri.WorldImagery\",\"OpenTopoMap\"],\"locs\",{\"collapsed\":true,\"autoZIndex\":true,\"position\":\"topleft\"}]},{\"method\":\"addCircleMarkers\",\"args\":[[40.924067,40.921667,40.92935,40.913883,40.938333,40.922783,40.943617,40.936383,40.900217,40.911667,41.00195,41.008883,40.975833,40.942783,40.955267,41.027717,41.052717,41.059117,40.9941,40.99625,41.05,41.076383,41.082217,41.013333,41.045283,41.063583,41.0055,41.00778,41.106267,41.077983,41.010367,41.0275,41.1144,41.081383,41.13445,41.02055,41.098017,41.025,41.010283,41.064167],[-72.63225,-72.61945,-72.6199,-72.615,-72.618617,-72.587217,-72.570833,-72.512217,-72.459083,-72.443617,-72.460283,-72.460283,-72.42945,-72.414717,-72.399483,-72.433367,-72.414,-72.414233,-72.367833,-72.349817,-72.376667,-72.40055,-72.4025,-72.34445,-72.347217,-72.359317,-72.3074,-72.2955,-72.354867,-72.311617,-72.252517,-72.26,-72.317483,-72.27305,-72.271383,-72.18195,-72.203667,-72.139167,-72.054167,-71.927783],[7.06285265871978,8.37527247362455,9.58891670714846,7.23044729270207,17,6.01356451552633,7.22558947722432,4.79911064608946,5.31947984006577,4.16701169612496,5.46948918201861,6.62132580994731,5.05676917902918,4.84817458241471,5.40711483128433,5.1100108366653,4.99342326519936,5.41605321176339,5.26089458540413,4.91530959231718,4.60965584245731,4.15749037778857,4.48335264003587,4.60479802697956,4.80882627704495,7.1378573296962,5.09057957475431,4.76996375322297,4.79425283061171,4.38619633048092,4.45906356264714,4.36190725309219,4.58070326220993,4,4.2042225626845,4.16254250588543,4.26475094353724,4.41534322334741,4.27446657449273,4.42020103882516],null,null,{\"interactive\":true,\"className\":\"\",\"stroke\":true,\"color\":\"black\",\"weight\":1,\"opacity\":0.5,\"fill\":true,\"fillColor\":[\"#88BCDA\",\"#BFE2EE\",\"#EBF6E7\",\"#8FC2DD\",\"#A50026\",\"#6093C4\",\"#8FC2DD\",\"#3F5DA8\",\"#4676B4\",\"#353E99\",\"#4C7CB8\",\"#75AED1\",\"#4369AE\",\"#405FA9\",\"#4979B6\",\"#436CAF\",\"#4266AD\",\"#4A7AB7\",\"#4573B3\",\"#4162AB\",\"#3D53A4\",\"#343E99\",\"#3B4DA1\",\"#3D53A3\",\"#3F5DA8\",\"#8BBFDB\",\"#436BAF\",\"#3F5BA7\",\"#3F5CA8\",\"#39499E\",\"#3A4CA0\",\"#38489E\",\"#3C52A3\",\"#313695\",\"#35409A\",\"#353E99\",\"#37439B\",\"#394A9F\",\"#37439C\",\"#394A9F\"],\"fillOpacity\":0.8},null,null,null,null,[\"Bay station  60250 ,  chl-a (ug/L)   8.56\",\"Bay station  60240 ,  chl-a (ug/L)   11.26\",\"Bay station  60230 ,  chl-a (ug/L)   13.76\",\"Bay station  60210 ,  chl-a (ug/L)   8.91\",\"Bay station  60220 ,  chl-a (ug/L)   29.02\",\"Bay station  60170 ,  chl-a (ug/L)   6.4\",\"Bay station  60101 ,  chl-a (ug/L)   8.89\",\"Bay station  60130 ,  chl-a (ug/L)   3.9\",\"Bay station  60290 ,  chl-a (ug/L)   4.97\",\"Bay station  60148 ,  chl-a (ug/L)   2.6\",\"Bay station  60102 ,  chl-a (ug/L)   5.28\",\"Bay station  60103 ,  chl-a (ug/L)   7.65\",\"Bay station  60113 ,  chl-a (ug/L)   4.43\",\"Bay station  60104 ,  chl-a (ug/L)   4\",\"Bay station  60300 ,  chl-a (ug/L)   5.15\",\"Bay station  60105 ,  chl-a (ug/L)   4.54\",\"Bay station  60106 ,  chl-a (ug/L)   4.3\",\"Bay station  60107 ,  chl-a (ug/L)   5.17\",\"Bay station  60310 ,  chl-a (ug/L)   4.85\",\"Bay station  60320 ,  chl-a (ug/L)   4.14\",\"Bay station  60114 ,  chl-a (ug/L)   3.51\",\"Bay station  60109 ,  chl-a (ug/L)   2.58\",\"Bay station  60340 ,  chl-a (ug/L)   3.25\",\"Bay station  60121 ,  chl-a (ug/L)   3.5\",\"Bay station  60124 ,  chl-a (ug/L)   3.92\",\"Bay station  60119 ,  chl-a (ug/L)   8.71\",\"Bay station  60127 ,  chl-a (ug/L)   4.5\",\"Bay station  60126 ,  chl-a (ug/L)   3.84\",\"Bay station  60111 ,  chl-a (ug/L)   3.89\",\"Bay station  60122 ,  chl-a (ug/L)   3.05\",\"Bay station  60131 ,  chl-a (ug/L)   3.2\",\"Bay station  60118 ,  chl-a (ug/L)   3\",\"Bay station  60115 ,  chl-a (ug/L)   3.45\",\"Bay station  60116 ,  chl-a (ug/L)   2.26\",\"Bay station  60330 ,  chl-a (ug/L)   2.68\",\"Bay station  60132 ,  chl-a (ug/L)   2.59\",\"Bay station  60137 ,  chl-a (ug/L)   2.8\",\"Bay station  60133 ,  chl-a (ug/L)   3.11\",\"Bay station  60134 ,  chl-a (ug/L)   2.82\",\"Bay station  60135 ,  chl-a (ug/L)   3.12\"],{\"interactive\":false,\"permanent\":false,\"direction\":\"auto\",\"opacity\":1,\"offset\":[0,0],\"textsize\":\"10px\",\"textOnly\":false,\"className\":\"\",\"sticky\":true},null]},{\"method\":\"addLegend\",\"args\":[{\"colors\":[\"#313695 , #4676B5 10.2574642203206%, #A5D4E6 28.9413699039647%, #F9FCCD 47.6252755876088%, #FEC172 66.3091812712529%, #E65135 84.9930869548971%, #A50026 \"],\"labels\":[\"5\",\"10\",\"15\",\"20\",\"25\"],\"na_color\":null,\"na_label\":\"NA\",\"opacity\":0.5,\"position\":\"bottomright\",\"type\":\"numeric\",\"title\":\"Median chl-a (ug/L)<\\/br>1990-2021, Jul\",\"extra\":{\"p_1\":0.102574642203206,\"p_n\":0.84993086954897},\"layerId\":null,\"className\":\"info legend\",\"group\":null}]}],\"limits\":{\"lat\":[40.900217,41.13445],\"lng\":[-72.63225,-71.927783]},\"fitBounds\":[40.900217,-72.63225,41.13445,-71.927783,[]]},\"evals\":[],\"jsHooks\":{\"render\":[{\"code\":\"function(el, x, data) {\\n  return (\\n      function(el, x, data) {\\n      // get the leaflet map\\n      var map = this; //HTMLWidgets.find('#' + el.id);\\n      // we need a new div element because we have to handle\\n      // the mouseover output separately\\n      // debugger;\\n      function addElement () {\\n      // generate new div Element\\n      var newDiv = $(document.createElement('div'));\\n      // append at end of leaflet htmlwidget container\\n      $(el).append(newDiv);\\n      //provide ID and style\\n      newDiv.addClass('lnlt');\\n      newDiv.css({\\n      'position': 'relative',\\n      'bottomleft':  '0px',\\n      'background-color': 'rgba(255, 255, 255, 0.7)',\\n      'box-shadow': '0 0 2px #bbb',\\n      'background-clip': 'padding-box',\\n      'margin': '0',\\n      'padding-left': '5px',\\n      'color': '#333',\\n      'font': '9px/1.5 \\\"Helvetica Neue\\\", Arial, Helvetica, sans-serif',\\n      'z-index': '700',\\n      });\\n      return newDiv;\\n      }\\n\\n\\n      // check for already existing lnlt class to not duplicate\\n      var lnlt = $(el).find('.lnlt');\\n\\n      if(!lnlt.length) {\\n      lnlt = addElement();\\n\\n      // grab the special div we generated in the beginning\\n      // and put the mousmove output there\\n\\n      map.on('mousemove', function (e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                           ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                           ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                           ' | zoom: ' + map.getZoom() +\\n                           ' | x: ' + L.CRS.EPSG3857.project(e.latlng).x.toFixed(0) +\\n                           ' | y: ' + L.CRS.EPSG3857.project(e.latlng).y.toFixed(0) +\\n                           ' | epsg: 3857 ' +\\n                           ' | proj4: +proj=merc +a=6378137 +b=6378137 +lat_ts=0.0 +lon_0=0.0 +x_0=0.0 +y_0=0 +k=1.0 +units=m +nadgrids=@null +no_defs ');\\n      } else {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      }\\n      });\\n\\n      // remove the lnlt div when mouse leaves map\\n      map.on('mouseout', function (e) {\\n      var strip = document.querySelector('.lnlt');\\n      if( strip !==null) strip.remove();\\n      });\\n\\n      };\\n\\n      //$(el).keypress(67, function(e) {\\n      map.on('preclick', function(e) {\\n      if (e.originalEvent.ctrlKey) {\\n      if (document.querySelector('.lnlt') === null) lnlt = addElement();\\n      lnlt.text(\\n                      ' lon: ' + (e.latlng.lng).toFixed(5) +\\n                      ' | lat: ' + (e.latlng.lat).toFixed(5) +\\n                      ' | zoom: ' + map.getZoom() + ' ');\\n      var txt = document.querySelector('.lnlt').textContent;\\n      console.log(txt);\\n      //txt.innerText.focus();\\n      //txt.select();\\n      setClipboardText('\\\"' + txt + '\\\"');\\n      }\\n      });\\n\\n      }\\n      ).call(this.getMap(), el, x, data);\\n}\",\"data\":null},{\"code\":\"function(el, x, data) {\\n  return (function(el,x,data){\\n           var map = this;\\n\\n           map.on('keypress', function(e) {\\n               console.log(e.originalEvent.code);\\n               var key = e.originalEvent.code;\\n               if (key === 'KeyE') {\\n                   var bb = this.getBounds();\\n                   var txt = JSON.stringify(bb);\\n                   console.log(txt);\\n\\n                   setClipboardText('\\\\'' + txt + '\\\\'');\\n               }\\n           })\\n        }).call(this.getMap(), el, x, data);\\n}\",\"data\":null}]}}"},{"path":"https://tbep-tech.github.io/peptools/reference/show_thrpep.html","id":null,"dir":"Reference","previous_headings":"","what":"Plot annual water quality value and thresholds for a segment — show_thrpep","title":"Plot annual water quality value and thresholds for a segment — show_thrpep","text":"Plot annual water quality values thresholds bay segment","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_thrpep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Plot annual water quality value and thresholds for a segment — show_thrpep","text":"","code":"show_thrpep(   dat,   bay_segment = c(\"Western\", \"Central\", \"Eastern\"),   param = c(\"chla\", \"sd\", \"tn\"),   trgs = NULL,   yrrng = NULL,   family = NA,   labelexp = TRUE,   txtlab = TRUE )"},{"path":"https://tbep-tech.github.io/peptools/reference/show_thrpep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Plot annual water quality value and thresholds for a segment — show_thrpep","text":"dat data frame data returned read_pepwq bay_segment chr string bay segment, one \"Western\", \"Central\", \"Eastern\" param chr string indicating water quality value appropriate threshold plot, one \"chla\" chlorophyll, \"sd\" secchi depth, \"tn\" total nitrogen trgs optional data.frame annual bay segment water quality thresholds, defaults peptargets yrrng numeric vector indicating min, max years include family optional chr string indicating font family text labels labelexp logical indicating y axis target labels plotted expressions, default TRUE txtlab logical indicating text label target value shown plot","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_thrpep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Plot annual water quality value and thresholds for a segment — show_thrpep","text":"ggplot object","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_thrpep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Plot annual water quality value and thresholds for a segment — show_thrpep","text":"","code":"show_thrpep(rawdat, bay_segment = 'Western', param = 'chl')"},{"path":"https://tbep-tech.github.io/peptools/reference/show_wqmatrixpep.html","id":null,"dir":"Reference","previous_headings":"","what":"Create a colorized table for chlorophyll or secchi exceedances — show_wqmatrixpep","title":"Create a colorized table for chlorophyll or secchi exceedances — show_wqmatrixpep","text":"Create colorized table chlorophyll secchi exceedances","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_wqmatrixpep.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create a colorized table for chlorophyll or secchi exceedances — show_wqmatrixpep","text":"","code":"show_wqmatrixpep(   dat,   param = c(\"chla\", \"sd\"),   txtsz = 3,   trgs = NULL,   yrrng = NULL,   alpha = 1,   bay_segment = c(\"Western\", \"Central\", \"Eastern\"),   asreact = FALSE,   nrows = 10,   family = NA )"},{"path":"https://tbep-tech.github.io/peptools/reference/show_wqmatrixpep.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create a colorized table for chlorophyll or secchi exceedances — show_wqmatrixpep","text":"dat data.frame formatted read_pepwq param chr string parameter plot, one \"chla\" chlorophyll \"sd\" secchi txtsz numeric size text plot, applies tab = FALSE trgs optional data.frame annual bay segment water quality targets, defaults peptargets yrrng numeric vector indicating min, max years include alpha numeric indicating color transparency bay_segment chr string bay segments include, one \"Western\", \"Central\", \"Eastern\" asreact logical indicating reactable object returned nrows asreact = TRUE, numeric specifying number rows table family optional chr string indicating font family text labels","code":""},{"path":"https://tbep-tech.github.io/peptools/reference/show_wqmatrixpep.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create a colorized table for chlorophyll or secchi exceedances — show_wqmatrixpep","text":"static ggplot object returned asreact = FALSE, otherwise reactable table returned","code":""},{"path":[]},{"path":"https://tbep-tech.github.io/peptools/reference/show_wqmatrixpep.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Create a colorized table for chlorophyll or secchi exceedances — show_wqmatrixpep","text":"","code":"show_wqmatrixpep(rawdat)"}]
